Search.setIndex({"docnames": ["about", "api_reference/brevitas.core", "api_reference/brevitas.core.bit_width", "api_reference/brevitas.core.function_wrapper", "api_reference/brevitas.core.quant", "api_reference/brevitas.core.scaling", "api_reference/brevitas.core.stats", "api_reference/brevitas.function", "api_reference/brevitas.ops", "api_reference/index", "faq", "getting_started", "index", "settings", "setup", "tutorials/anatomy_quantizer", "tutorials/index", "tutorials/onnx_export", "tutorials/quant_activation_overview", "tutorials/quant_recurrent", "tutorials/quant_tensor_quant_conv2d_overview", "tutorials/tvmcon2021", "user_guide/architecture", "user_guide/compile", "user_guide/datatypes", "user_guide/export", "user_guide/export_gguf", "user_guide/graph_transformations", "user_guide/index", "user_guide/precision", "user_guide/proxies", "user_guide/quantized_layers", "user_guide/quantized_tensor", "user_guide/quantizers", "user_guide/scaling", "user_guide/zero_point"], "filenames": ["about.rst", "api_reference/brevitas.core.rst", "api_reference/brevitas.core.bit_width.rst", "api_reference/brevitas.core.function_wrapper.rst", "api_reference/brevitas.core.quant.rst", "api_reference/brevitas.core.scaling.rst", "api_reference/brevitas.core.stats.rst", "api_reference/brevitas.function.rst", "api_reference/brevitas.ops.rst", "api_reference/index.rst", "faq.rst", "getting_started.rst", "index.rst", "settings.rst", "setup.rst", "tutorials/anatomy_quantizer.nblink", "tutorials/index.rst", "tutorials/onnx_export.nblink", "tutorials/quant_activation_overview.nblink", "tutorials/quant_recurrent.nblink", "tutorials/quant_tensor_quant_conv2d_overview.nblink", "tutorials/tvmcon2021.nblink", "user_guide/architecture.rst", "user_guide/compile.rst", "user_guide/datatypes.rst", "user_guide/export.rst", "user_guide/export_gguf.rst", "user_guide/graph_transformations.rst", "user_guide/index.rst", "user_guide/precision.rst", "user_guide/proxies.rst", "user_guide/quantized_layers.rst", "user_guide/quantized_tensor.rst", "user_guide/quantizers.rst", "user_guide/scaling.rst", "user_guide/zero_point.rst"], "titles": ["About", "brevitas.core package", "brevitas.core.bit_width package", "brevitas.core.function_wrapper package", "brevitas.core.quant package", "brevitas.core.scaling package", "brevitas.core.stats package", "brevitas.function package", "brevitas.ops package", "API reference", "F.A.Q.", "Getting started", "Brevitas", "Settings", "Setup", "Anatomy of a Quantizer", "Tutorials", "ONNX Export", "An Overview of Quantized Activations", "Quantized RNNs and LSTMs", "An overview of QuantTensor and QuantConv2d", "Brevitas TVMCon 2021 tutorial", "Architecture", "Brevitas and Compile", "&lt;no title&gt;", "Export Compatibility", "GGUF Export", "&lt;no title&gt;", "User Guides", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;"], "terms": {"amd": [0, 12], "research": [0, 12], "advanc": [0, 21, 22], "develop": 0, "softwar": [0, 22], "brevita": [0, 9, 10, 13, 14, 15, 17, 18, 19, 20, 22, 25, 26, 28], "franco": 0, "giusepp": 0, "pappalardo": [0, 7], "alessandro": 0, "fraser": 0, "nichola": 0, "j": [0, 7], "titl": 0, "xilinx": [0, 14, 18, 21, 25], "year": 0, "2025": [0, 17, 19], "publish": 0, "zenodo": 0, "doi": 0, "10": [0, 3, 11, 15, 17, 18, 19, 20, 21], "5281": 0, "3333552": 0, "url": 0, "http": [0, 14, 17, 19, 21], "org": [0, 26], "bit_width": [1, 4, 5, 7, 11, 15, 17, 18, 19, 20, 21, 26], "const": [1, 5, 17, 19, 21], "bitwidthconst": [1, 2, 4, 15, 18, 21], "forward": [1, 2, 3, 4, 5, 6, 11, 15, 17, 18, 19, 20, 21, 23], "bitwidthstatefulconst": [1, 2], "msbclampbitwidth": [1, 2], "paramet": [1, 4, 5, 6, 7, 13, 15, 18, 19, 21, 22, 26], "bitwidthparamet": [1, 2], "removebitwidthparamet": [1, 2], "function_wrapp": [1, 4, 21], "clamp": [1, 4, 5, 7, 8, 15], "clampmin": [1, 3], "floatclamp": [1, 3], "inf_nan_clamp": [1, 3], "saturating_clamp": [1, 3], "scalarclamp": [1, 3], "tensorclamp": [1, 3, 4, 5, 15, 18, 21], "misc": [1, 21], "ident": [1, 3, 4, 5, 7, 15, 18, 21], "inplacelogtwo": [1, 3], "logtwo": [1, 3], "poweroftwo": [1, 3], "ops_st": [1, 15, 22], "ceilst": [1, 3], "dpuroundst": [1, 3], "floorst": [1, 3], "inplacetensorclampst": [1, 3], "roundst": [1, 2, 3, 4, 15, 18, 21], "roundtozerost": [1, 3], "scalarclampminst": [1, 3, 15, 18, 21], "tensorclampst": [1, 3], "shape": [1, 5, 6, 11, 15, 18, 19, 21, 26], "dynamicoversubchannelblockview": [1, 3], "overbatchoveroutputchannelview": [1, 3], "overbatchovertensorview": [1, 3, 5], "overoutputchannelview": [1, 3, 18], "overoutputfeaturesview": [1, 3], "oversubchannelblockview": [1, 3], "overtensorview": [1, 3, 15, 18, 21], "permutedim": [1, 3, 18], "statsinputviewshapeimpl": [1, 3], "dynamic_over_subchannel_block": [1, 3], "over_batch_over_output_channel": [1, 3, 7], "over_batch_over_tensor": [1, 3, 7], "over_output_channel": [1, 3, 7], "over_output_featur": [1, 3, 7], "over_subchannel_block": [1, 3], "over_tensor": [1, 3, 7], "quant": [1, 11, 15, 17, 18, 19, 20, 21, 23, 26], "binari": [1, 7, 8, 14, 19, 22], "binaryqu": [1, 4, 15, 22], "clampedbinaryqu": [1, 4, 15, 22], "delai": [1, 15, 21], "delaywrapp": [1, 4, 15, 18, 21], "int": [1, 2, 5, 6, 7, 15, 19, 20, 21, 26], "decoupledrescalingintqu": [1, 4], "decoupledrescalingintquantwithinput": [1, 4], "prescaledrestrictintqu": [1, 4], "prescaledrestrictintquantwithinputbitwidth": [1, 4], "rescalingintqu": [1, 4, 15, 18, 21, 26], "truncintqu": [1, 4, 5], "max_int": [1, 4, 7], "min_int": [1, 4, 7], "int_bas": 1, "decoupledintqu": [1, 4], "to_int": [1, 4], "intquant": [1, 4, 15, 18, 21], "ternari": 1, "ternaryqu": [1, 4], "scale": [1, 4, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23], "int_scal": 1, "intscal": [1, 4, 5, 15, 18, 21], "poweroftwointsc": [1, 5], "runtim": [1, 11, 13, 14, 20, 21, 22, 23], "runtimedynamicgroupstatssc": [1, 5], "runtimestatssc": [1, 5], "statsfromparametersc": [1, 5], "standalon": [1, 21], "constscal": [1, 4, 5, 15], "parameterfromruntimestatssc": [1, 5, 15, 18, 21], "init_scal": [1, 5], "state_dict": [1, 5, 15, 19, 21, 22], "training_forward": [1, 5], "parameterfromstatsfromparametersc": [1, 5], "parametersc": [1, 5, 15, 21], "truncmsbscal": [1, 4, 5], "truncscalingwrapp": [1, 5], "stat": [1, 15, 18, 21, 22], "stats_op": 1, "absav": [1, 6], "absmax": [1, 5, 6, 13, 21, 23], "absmaxav": [1, 6], "absmaxl2": [1, 6], "absminmax": [1, 6], "abspercentil": [1, 6, 15, 18, 21], "halfquadraticoptimizerscal": [1, 6], "optim": [1, 6, 15, 17, 19, 22, 23, 25, 26], "parameter_search": [1, 6], "halfquadraticoptimizerzeropoint": [1, 6], "klminimizerthreshold": [1, 6], "smooth_normalize_distribut": [1, 6], "l1norm": [1, 6], "l2norm": [1, 6], "mse": [1, 5, 6, 23], "evaluate_loss": [1, 6], "mse_fib_search": [1, 6], "mse_grid_search": [1, 6], "mse_loss_fn": [1, 6], "mse_search": [1, 6], "meanlearnedsigmastd": [1, 6], "meansigmastd": [1, 6], "negativeminorzero": [1, 6], "negativepercentileorzero": [1, 6], "percentileinterv": [1, 6], "masked_median": [1, 6], "shrink_lp_op": [1, 6], "stats_wrapp": 1, "view_wrapp": 1, "class": [1, 2, 3, 4, 5, 6, 8, 11, 15, 17, 20, 21, 22, 26], "floatrestrictvalu": [1, 5, 15, 18, 21, 26], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 15, 19, 20, 21, 22], "base": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 17, 18, 19, 22, 23, 26], "x": [1, 3, 4, 5, 6, 7, 8, 10, 11, 15, 20, 26], "defin": [1, 2, 3, 4, 5, 6, 15, 17, 18, 19, 20, 22, 26], "comput": [1, 2, 3, 4, 5, 6, 7, 10, 11, 15, 17, 19, 20, 21, 22, 23], "perform": [1, 2, 3, 4, 5, 6, 7, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26], "everi": [1, 2, 3, 4, 5, 6, 11, 14, 22, 23], "call": [1, 2, 3, 4, 5, 6, 11, 14, 15, 18, 20, 22], "should": [1, 2, 3, 4, 5, 6, 10, 15, 20, 21, 22, 23, 26], "overridden": [1, 2, 3, 4, 5, 6], "all": [1, 2, 3, 4, 5, 6, 7, 11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "subclass": [1, 2, 3, 4, 5, 6, 15, 23], "rtype": [1, 2, 3, 4, 5, 6], "tensor": [1, 2, 3, 4, 5, 6, 7, 11, 13, 15, 17, 18, 19, 20, 22, 23, 26], "although": [1, 2, 3, 4, 5, 6, 17, 18, 21, 23, 26], "recip": [1, 2, 3, 4, 5, 6, 26], "pass": [1, 2, 3, 4, 5, 6, 11, 17, 18, 19, 20, 21, 22, 23, 26], "need": [1, 2, 3, 4, 5, 6, 7, 11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "within": [1, 2, 3, 4, 5, 6, 11, 13, 15, 19, 20, 21, 22, 23], "thi": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26], "function": [1, 2, 3, 4, 5, 6, 8, 9, 11, 14, 15, 17, 18, 19, 20, 23, 25, 26], "one": [1, 2, 3, 4, 5, 6, 7, 11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "instanc": [1, 2, 3, 4, 5, 6, 18, 19, 20, 21], "afterward": [1, 2, 3, 4, 5, 6, 21], "instead": [1, 2, 3, 4, 5, 6, 15, 17, 19, 20, 22, 23], "sinc": [1, 2, 3, 4, 5, 6, 7, 14, 15, 17, 18, 20, 21, 23], "former": [1, 2, 3, 4, 5, 6, 15], "take": [1, 2, 3, 4, 5, 6, 11, 15, 17, 18, 19, 20, 21, 22], "care": [1, 2, 3, 4, 5, 6, 15, 21], "run": [1, 2, 3, 4, 5, 6, 10, 12, 15, 17, 18, 19, 20, 21, 22, 23], "regist": [1, 2, 3, 4, 5, 6], "hook": [1, 2, 3, 4, 5, 6, 18, 20, 21], "while": [1, 2, 3, 4, 5, 6, 7, 8, 11, 14, 15, 18, 19, 20, 21, 22, 26], "latter": [1, 2, 3, 4, 5, 6], "silent": [1, 2, 3, 4, 5, 6, 13], "ignor": [1, 2, 3, 4, 5, 6, 13, 26], "them": [1, 2, 3, 4, 5, 6, 11, 15, 18, 19, 20, 21, 22, 23], "restrict_init_float": 1, "return": [1, 2, 4, 5, 6, 7, 11, 15, 17, 18, 19, 20, 21, 22, 26], "type": [1, 2, 4, 5, 6, 7, 11, 12, 15, 17, 18, 20, 21, 22, 23, 26], "float": [1, 2, 4, 5, 7, 10, 13, 14, 15, 17, 18, 19, 20, 22, 23, 26], "restrict_init_inplace_modul": 1, "restrict_init_modul": 1, "restrict_init_tensor": 1, "intrestrictvalu": [1, 2], "restrict_value_float_to_int_impl": [1, 26], "logfloatrestrictvalu": 1, "poweroftworestrictvalu": [1, 5], "quantrestrictvalu": [1, 26], "retrocompatibility_op": 1, "parameterwrapp": 1, "valu": [1, 2, 5, 6, 7, 11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "singleargstatelessbuff": 1, "placehold": [1, 5, 20], "slicetensor": 1, "eager_forward": 1, "statelessbuff": [1, 15, 18, 21], "destin": [1, 5], "none": [1, 2, 3, 4, 5, 6, 7, 8, 15, 17, 18, 19, 20, 21, 22, 26], "prefix": [1, 5, 15, 19, 21, 22], "keep_var": [1, 5], "fals": [1, 2, 4, 5, 6, 7, 13, 15, 17, 18, 19, 20, 21, 22, 26], "dictionari": [1, 5], "contain": [1, 5, 7, 13, 15, 21, 22, 26], "refer": [1, 5, 12, 15], "whole": [1, 5, 15], "state": [1, 2, 5, 11, 13, 15, 19, 21, 22], "both": [1, 5, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26], "persist": [1, 5], "buffer": [1, 5, 21], "e": [1, 3, 5, 10, 13, 15, 17, 18, 20, 21, 22, 23, 25, 26], "g": [1, 5, 10, 13, 15, 17, 20, 21, 22, 23, 25], "averag": [1, 5, 15, 18, 20, 21], "ar": [1, 4, 5, 8, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26], "includ": [1, 5, 10, 15, 18, 21, 22, 23], "kei": [1, 5, 13, 15, 19, 21], "correspond": [1, 4, 5, 7, 13, 14, 21, 26], "name": [1, 5, 15, 17, 18, 19, 20, 21, 22], "set": [1, 2, 3, 4, 5, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26], "The": [1, 2, 4, 5, 7, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 26], "object": [1, 3, 5, 15, 18, 22, 26], "i": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26], "shallow": [1, 5], "copi": [1, 5], "It": [1, 5, 12, 15, 17, 18, 20, 21, 22], "": [1, 2, 5, 7, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 25], "current": [1, 3, 5, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26], "also": [1, 5, 15, 17, 18, 19, 20, 21, 22, 23, 26], "accept": [1, 5, 11, 15, 18, 19, 21], "posit": [1, 5, 18, 26], "argument": [1, 5, 7, 15, 17, 18, 19, 20, 22, 26], "order": [1, 5, 7, 8, 11, 15, 20, 21, 22, 25, 26], "howev": [1, 5, 15, 17, 18, 19, 20, 21, 22, 23], "being": [1, 5, 10, 13, 15, 17, 19, 20, 21, 22, 23, 26], "deprec": [1, 5], "keyword": [1, 5, 15, 18, 19, 20, 22], "enforc": [1, 5, 20, 21, 22], "futur": [1, 5, 19, 23], "releas": [1, 5, 14, 15, 18, 19, 20, 21, 25], "pleas": [1, 5, 15, 18, 19, 20, 21, 23, 26], "avoid": [1, 2, 5, 6, 7, 14, 15, 20, 21], "us": [1, 3, 4, 5, 7, 10, 11, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26], "design": [1, 5, 10, 14, 15, 21, 22], "end": [1, 5, 7, 10, 11, 14, 15, 18, 19, 21], "user": [1, 5, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26], "dict": [1, 2, 5, 13, 15, 21, 22], "option": [1, 5, 6, 13, 15, 17, 18, 19, 20, 21, 23, 26], "If": [1, 5, 15, 18, 20, 21, 22, 26], "provid": [1, 5, 7, 10, 11, 12, 13, 14, 15, 17, 18, 21, 22, 23, 26], "updat": [1, 5, 13, 15, 17, 21], "same": [1, 3, 5, 6, 10, 15, 17, 18, 19, 20, 21, 22, 26], "otherwis": [1, 5, 17, 19, 21, 22], "an": [1, 3, 4, 5, 7, 10, 11, 13, 14, 17, 19, 21, 22, 23, 25, 26], "ordereddict": [1, 5], "creat": [1, 5, 15, 20, 22, 26], "default": [1, 2, 4, 5, 6, 11, 13, 14, 15, 17, 18, 19, 20, 22], "str": [1, 5, 19, 20], "ad": [1, 5, 17, 19, 20, 23, 26], "compos": [1, 5, 18, 22, 26], "bool": [1, 2, 4, 5, 7, 15, 18, 19, 20, 21], "detach": [1, 5, 21], "from": [1, 2, 4, 5, 6, 7, 13, 15, 17, 18, 19, 20, 22, 23, 26], "autograd": [1, 5, 7, 8, 14, 22], "true": [1, 3, 4, 5, 6, 7, 11, 13, 15, 17, 18, 19, 20, 21, 22, 23, 26], "exampl": [1, 2, 3, 4, 5, 7, 8, 11, 18, 19, 20, 21, 22, 23, 25], "xdoctest": [1, 5], "skip": [1, 5, 11, 15, 18, 20, 21, 22, 23], "undefin": [1, 5, 23], "var": [1, 5], "bia": [1, 5, 11, 17, 19, 22], "weight": [1, 4, 5, 6, 7, 13, 17, 18, 20, 22, 23, 26], "inplace_momentum_upd": 1, "momentum": [1, 5], "counter": 1, "new_count": 1, "inplace_tensor_add": 1, "inplace_tensor_mul": 1, "parameterfromruntimezeropoint": 1, "collect_stats_step": [1, 5, 21], "int_quant": [1, 4, 15, 18, 21], "quantize_zero_point": 1, "zero_point_stats_impl": 1, "zero_point_shap": [1, 26], "zero_point_stats_input_view_shape_impl": 1, "zero_point_stats_momentum": 1, "0": [1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 15, 17, 18, 19, 20, 21, 22, 23], "1": [1, 2, 4, 5, 6, 7, 8, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 26], "dtype": [1, 2, 3, 5, 6, 11, 19, 20, 21], "devic": [1, 2, 3, 5, 6, 19, 20, 21], "init_zp": 1, "parameterfromstatsfromparameterzeropoint": 1, "zero_point_stats_input_concat_dim": 1, "tracked_parameter_list": [1, 5, 26], "scriptmodul": [1, 2, 3, 4, 5, 6, 15, 21], "implement": [1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 18, 20, 21, 22, 25], "learn": [1, 2, 5, 13, 15, 18, 20, 22, 26], "factor": [1, 4, 5, 15, 17, 18, 20, 21, 22, 23, 26], "initi": [1, 2, 5, 13, 17, 18, 19, 20, 21, 22], "statist": [1, 5, 18, 21, 22, 23], "parameterzeropoint": 1, "zero_point_init": 1, "prezerocenterzeropoint": 1, "stats_reduce_dim": [1, 6, 21], "pre_zero_point_stats_input_view_shape_impl": 1, "pre_zero_point_shap": 1, "experiment": [1, 15, 18, 19, 20, 21, 25], "pre": [1, 4, 15, 21, 22, 26], "zero": [1, 4, 6, 7, 15, 17, 18, 19, 20, 21, 22, 23, 26], "point": [1, 2, 4, 5, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 26], "center": 1, "incom": 1, "intend": 1, "get_zero_cent": 1, "statsfromparameterzeropoint": 1, "scale_shift_zero_point_impl": [1, 26], "zerozeropoint": [1, 4, 15, 18, 21], "constant": [2, 5, 17, 19, 21], "bit": [2, 4, 5, 7, 11, 15, 17, 18, 19, 20, 22, 23, 25, 26], "width": [2, 4, 5, 7, 17, 18, 19, 20, 22, 25, 26], "wrap": [2, 4, 5, 8, 15, 20, 22], "torch": [2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 26], "8": [2, 3, 4, 5, 7, 11, 14, 15, 18, 19, 20, 21, 26], "part": [2, 7, 14, 15, 21, 22, 23], "mean": [2, 5, 11, 15, 17, 18, 19, 20, 21, 22, 23], "won": [2, 17, 18], "t": [2, 4, 7, 8, 10, 11, 15, 17, 18, 19, 20, 21, 22, 23], "save": [2, 17, 19], "checkpoint": 2, "map": [2, 4, 5, 15, 20, 21], "bit_width_impl_typ": [2, 21], "bitwidthimpltyp": [2, 21], "higher": [2, 4, 5, 15, 17], "level": [2, 4, 5, 12, 15, 18, 19, 21, 22], "api": [2, 4, 5, 12, 17, 18, 19, 20, 21, 22], "retain": [2, 5], "counterpart": [2, 22], "differ": [2, 3, 5, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 26], "stateful_const": 2, "bit_width_to_remove_impl": 2, "min_overall_bit_width": 2, "max_overall_bit_width": 2, "input_bit_width": [2, 4, 5, 7, 21], "min_bit_width": 2, "2": [2, 3, 4, 5, 7, 11, 14, 15, 17, 18, 19, 20, 21], "restrict_bit_width_impl": 2, "float_to_int_impl": [2, 4, 15, 18, 21], "override_pretrained_bit_width": 2, "learnabl": 2, "output": [2, 4, 5, 7, 11, 15, 17, 18, 19, 22, 23], "lower": [2, 5, 7, 19, 23], "bound": [2, 5, 7], "restrict": [2, 4, 5, 7, 11, 17, 20, 21, 22, 25], "subset": [2, 15, 25], "pretrain": [2, 11, 13, 15, 19, 21, 22], "load": [2, 13, 14, 15, 21, 22, 26], "backend": [2, 7, 10, 13, 21, 22, 26], "nn": [2, 5, 13, 15, 17, 18, 19, 20, 21, 22, 26], "rais": [2, 5, 15, 18, 19, 20, 21], "runtimeerror": [2, 5, 15, 18, 19, 20, 21], "bit_width_paramet": 2, "grad_fn": [2, 4, 5, 7, 15, 18, 19, 20, 21], "roundstefnbackward": [2, 7], "env": [2, 4, 5, 7, 8, 14, 15, 17, 18, 19, 20, 21], "variabl": [2, 4, 5, 13, 14, 15, 19, 21, 26], "brevitas_ignore_missing_kei": [2, 5, 13, 15, 21], "error": [2, 5, 13, 15, 18, 19, 20, 21, 23], "when": [2, 4, 5, 7, 8, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23], "retrain": [2, 5], "bit_width_to_remov": 2, "non_zero_epsilon": 2, "1e": [2, 6, 19], "06": [2, 17, 20], "remove_zero_bit_width": 2, "wrapper": [3, 5, 7, 21, 22], "variou": [3, 7, 8, 11, 12, 13, 15, 20, 21, 22, 25], "variant": [3, 7, 11, 15, 18, 19, 21, 22, 23], "min_val": [3, 7, 8, 17, 18], "clamp_min": [3, 7, 8], "3": [3, 4, 5, 7, 11, 14, 15, 17, 18, 19, 20, 21, 22], "tensor_clamp_impl": [3, 4, 5, 15, 18, 21], "sign": [3, 4, 5, 6, 7, 8, 15, 17, 18, 20, 21, 22, 26], "inf_valu": 3, "nan_valu": 3, "max_available_float": 3, "satur": 3, "minifloat": [3, 23], "format": [3, 4, 10, 11, 15, 17, 18, 20, 21, 22, 26], "inf": 3, "nan": [3, 6], "code": [3, 15, 23, 26], "have": [3, 7, 8, 10, 11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "encod": 3, "through": [3, 4, 5, 7, 8, 11, 13, 14, 15, 17, 18, 19, 21, 22, 25, 26], "mantissa": 3, "1101": [3, 19], "111": [3, 15], "e4m3": 3, "valid": [3, 6, 15, 20, 22], "exponent_bit_width": [3, 7], "pre_compute_max_mantissa": 3, "exponent_bia": [3, 7], "inf_mask": 3, "p_max_val_mask": 3, "n_max_val_mask": 3, "max_valu": 3, "min_valu": 3, "max_val": [3, 7, 8, 17, 18], "scalar_clamp": 3, "tensor_clamp": [3, 7, 8], "A": [3, 7, 11, 17, 20, 21, 22, 23], "collect": [3, 5, 6, 18, 21, 22], "miscellan": 3, "quantiz": [3, 4, 5, 6, 7, 10, 12, 13, 14, 25], "randn": [3, 7, 11, 15, 17, 18, 19, 20, 21], "size": [3, 10, 19, 20, 21, 22, 26], "y": [3, 4, 7, 8, 10, 15], "log2_": 3, "inplace_log_two": 3, "note": [3, 7, 11, 15, 17, 18, 19, 20, 21, 25], "inplac": 3, "oper": [3, 7, 10, 11, 12, 13, 14, 17, 18, 19, 20, 23, 25], "torchscript": [3, 4, 5, 7, 13, 15, 19, 21, 22], "can": [3, 7, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26], "problemat": 3, "compil": [3, 4, 7, 12, 13, 14, 15, 18, 21, 22, 28], "disabl": [3, 13, 18, 19, 20, 21, 22], "log2": [3, 21], "log_two": 3, "power_of_two": 3, "5": [3, 4, 6, 7, 11, 15, 17, 18, 19, 20, 21], "32": [3, 11, 15, 18, 21, 26], "ceil_st": [3, 7, 8], "dpu_round_st": [3, 7, 8], "floor_st": [3, 7, 8], "tensor_clamp_ste_": [3, 7], "round_st": [3, 7, 8], "round_to_zero_st": [3, 7, 8], "scalar_clamp_min_st": [3, 7, 8], "tensor_clamp_st": [3, 7], "view": [3, 5, 7, 15, 18, 20, 23], "accord": [3, 4, 5, 7, 11, 15, 20, 21, 22], "criteria": [3, 5, 11], "group_siz": [3, 5, 26], "group_dim": [3, 5, 26], "permute_dim": 3, "input": [3, 4, 5, 7, 11, 15, 17, 18, 19, 22], "view_modul": 3, "empti": [3, 5, 22, 26], "25": [3, 15, 19, 20, 21], "scriptmoodul": 3, "250": 3, "16": [3, 5, 11, 15, 18, 19, 20, 21], "200": 3, "80": [3, 15, 18], "expanded_groupwise_shap": [3, 26], "6": [3, 4, 5, 11, 15, 17, 18, 19, 20, 21, 26], "2400": 3, "enum": 3, "like": [3, 4, 11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "pointer": [3, 15, 18, 21], "adher": [3, 7, 10, 22], "interfac": [3, 5, 8, 11, 17, 18, 19, 21, 22, 23], "alia": [3, 8, 21], "scaling_impl": [4, 5, 15, 18, 21], "quant_delay_step": [4, 15], "uniform": [4, 10, 12, 15, 19, 22], "binary_sign_st": [4, 7, 8, 15], "number": [4, 5, 7, 15, 18, 19, 21, 22, 23], "train": [4, 5, 10, 11, 12, 15, 18, 19, 20, 22], "step": [4, 15, 17, 18, 21, 23], "de": [4, 15, 22], "tupl": [4, 5, 7, 15, 17, 19, 20, 21, 22, 26], "import": [4, 5, 11, 15, 17, 18, 19, 20, 21, 23, 26], "binary_qu": [4, 15], "inp": [4, 15, 17, 18, 19, 20, 21], "04": [4, 5, 15, 20], "out": [4, 11, 12, 15, 17, 18, 19, 20], "zero_point": [4, 15, 18, 19, 20, 21], "1000": [4, 6, 7, 15, 19, 21], "quant_typ": [4, 15, 21, 22], "quanttyp": [4, 15, 21, 22], "appli": [4, 5, 7, 8, 12, 15, 18, 19, 20, 21, 22, 26], "brevitas_jit": [4, 7, 8, 10, 13, 14, 15, 19, 21, 22], "enabl": [4, 7, 10, 11, 13, 14, 15, 18, 20, 21, 22], "befor": [4, 5, 15, 17, 19, 20, 21], "go": [4, 5, 15, 17, 18, 19, 20, 21, 22], "between": [4, 7, 11, 15, 17, 18, 20, 21, 22, 23], "which": [4, 5, 7, 10, 13, 15, 17, 18, 19, 20, 21, 22, 23, 26], "backward": [4, 7, 8], "gradient": [4, 7, 8, 13, 20], "outsid": [4, 10, 15, 21], "rang": [4, 5, 17, 18, 21], "wise": [4, 10, 22, 26], "requires_grad_": 4, "mulbackward0": [4, 15, 18, 20, 21], "grad": [4, 7], "0000": [4, 7, 18, 19, 21], "activ": [4, 5, 13, 17, 19, 20, 22, 23, 26], "decoupled_int_qu": 4, "pre_scaling_impl": 4, "int_scaling_impl": [4, 6, 15, 18, 21], "pre_zero_point_impl": 4, "zero_point_impl": [4, 15, 18, 21], "bit_width_impl": [4, 6, 21], "input_is_sign": [4, 7], "around": [4, 11, 15, 22, 23], "integ": [4, 5, 7, 10, 17, 18, 20, 21, 23, 26], "taken": [4, 21, 23], "narrow_rang": [4, 5, 7, 17, 21], "int_quant_wrapp": 4, "01": [4, 6, 15], "4": [4, 5, 7, 11, 14, 15, 17, 18, 19, 20, 21, 26], "042": 4, "053": 4, "31": [4, 5, 15, 19, 20, 21], "44": [4, 5], "0400": 4, "0500": 4, "0700": 4, "0100": [4, 15], "respect": [4, 11, 15, 20, 22, 26], "here": [4, 5, 15, 18, 21, 23, 26], "interpret": [4, 5], "threshold": [4, 5], "0429": 4, "0571": 4, "0143": 4, "trunc_scaling_impl": [4, 5], "requant": [4, 22], "some": [4, 5, 10, 11, 14, 17, 18, 19, 20, 21, 22, 26], "anoth": [4, 20, 21, 26], "maintain": [4, 23], "previou": [4, 11, 15, 18, 19, 20, 21, 23], "convers": [4, 18, 19], "represent": [4, 7, 11, 17, 18, 20, 21, 22, 26], "truncat": [4, 5], "extra": [4, 11, 15, 17, 18, 20, 21, 26], "multipl": [4, 5, 11, 15, 19, 21, 22], "flag": [4, 13, 15, 19, 20, 21], "determin": [4, 18], "whether": [4, 7, 13, 15, 17, 20, 22, 23], "narrow": [4, 7, 17], "trunc_quant": 4, "05": [4, 5, 17, 19, 20, 21], "3200": 4, "4800": 4, "1600": 4, "input_view_impl": [4, 5, 15, 18, 21], "shift": [4, 15, 18], "pre_scal": 4, "pre_zero_point": 4, "02": [4, 20], "0200": 4, "0300": 4, "ternary_sign_st": [4, 7, 8], "ternar": 4, "w": [4, 7, 8, 10, 17, 18, 19, 20, 21, 22], "r": [4, 7, 8, 15, 18, 22], "ternary_qu": 4, "scaling_stats_impl": [5, 21], "scaling_min_v": [5, 6], "restrict_scaling_impl": [5, 21, 26], "restrict_threshold_impl": [5, 26], "stats_input": 5, "scaling_stats_input_view_shape_impl": [5, 18, 21], "scaling_shap": [1, 5, 15, 21, 26], "affine_resc": 5, "affine_shift_scal": 5, "scaling_stats_momentum": 5, "scaling_stats_input_concat_dim": 5, "force_paramet": 5, "scaling_init": [5, 15, 21], "union": [5, 7, 18, 20, 21], "forc": [5, 13, 19, 20, 21, 22], "method": [5, 15, 20], "singl": [5, 12, 14, 15, 17, 18, 19, 21, 22], "requir": [5, 13, 15, 18, 19, 20, 21, 22, 23, 25], "earli": 5, "version": [5, 14, 15, 19, 21, 22, 23], "consist": [5, 15], "across": [5, 11, 12, 19, 21, 22, 23], "scaling_impl_typ": [5, 21], "scalingimpltyp": [5, 21, 22], "permute_impl": [5, 18], "work": [5, 15, 18, 19, 20, 21, 22], "two": [5, 11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "phase": [5, 18, 21], "dure": [5, 10, 15, 18, 21, 23, 26], "first": [5, 8, 11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "fashion": [5, 21], "batchnorm": 5, "mode": [5, 18, 20, 21, 22, 23, 26], "per": [5, 6, 15, 17, 18, 19, 20, 26], "batch": [5, 7, 10, 17, 18, 19, 21], "background": [5, 15], "infer": [5, 10, 11, 12, 20, 21, 22, 23, 25, 26], "second": [5, 15, 18, 19, 20, 21, 23], "accumul": [5, 7, 18, 20, 21, 22], "behaviour": [5, 13, 15, 18, 19, 20, 21, 22], "scalar_shap": [5, 26], "move": [5, 17, 18, 19, 21], "default_momentum": 5, "scaling_stats_permute_dim": [5, 18, 21], "arang": 5, "randn_lik": 5, "absbinarysigngradfnbackward": [5, 7, 18, 19, 20], "parameter_from_stat": [5, 21, 22, 26], "extend": [5, 11, 15, 17, 21, 22], "scalar": [5, 7, 17], "non": [5, 12, 15, 18, 20, 22, 23], "powbackward1": 5, "calcul": [5, 7, 18], "keep": [5, 11, 15, 18, 19, 21], "most": [5, 9, 13, 15, 18, 20, 21, 22, 23], "signific": [5, 22, 23], "compat": [5, 14, 15, 18, 22, 23, 26], "member": 5, "arg": [5, 7, 8, 15, 17, 18, 21], "output_bit_width": [5, 19], "scaling_input": 5, "trunc_scal": 5, "match": [5, 11, 15, 17, 18, 19, 21, 22, 26], "convent": 5, "other": [5, 7, 11, 15, 17, 18, 19, 20, 21, 22, 25, 26], "truncscalingimpltyp": 5, "msb": 5, "trunc_int_scaling_impl": 5, "inferfac": 5, "standard": [5, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26], "keepdim": 6, "high_percentile_q": [6, 21], "percentile_q": 6, "proxy_modul": 6, "hqo_init_op_scal": 6, "inner_stats_input_view_shape_impl": 6, "hqo_beta_scal": 6, "100000": 6, "hqo_kappa_scal": 6, "hqo_lp_norm_scal": 6, "7": [6, 7, 15, 17, 18, 19, 20, 21], "hqo_iters_scal": 6, "xl": 6, "hqo_init_op_zp": 6, "hqo_beta_zp": 6, "hqo_kappa_zp": 6, "hqo_lp_norm_zp": 6, "hqo_iters_zp": 6, "num_bin": 6, "1001": 6, "smoothing_ep": 6, "0001": [6, 20], "apach": 6, "incub": 6, "mxnet": 6, "p": [6, 19], "ep": 6, "channel": [6, 7, 15, 17, 18, 19, 22, 26], "l1": [6, 7], "normal": [6, 15, 17, 18, 21, 23, 26], "l2": 6, "mse_init_op": 6, "mse_search_method": 6, "fibonacci": 6, "mse_it": 6, "20": [6, 15, 18, 19, 20, 21], "candid": 6, "xr": 6, "quant_valu": [6, 20], "sigma": 6, "stats_output_shap": 6, "std_dev_epsilon": 6, "08": 6, "low_percentile_q": 6, "mask": 6, "dim": [6, 7, 15, 18, 21], "median": 6, "along": [6, 7, 18, 22], "where": [6, 15, 17, 18, 19, 20, 21, 22, 23], "broadcast": [6, 7, 18], "booltensor": 6, "ani": [6, 7, 10, 11, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26], "column": 6, "dimens": [6, 7, 18], "divis": 6, "except": [6, 7, 14, 15, 18, 19, 20, 21, 22, 26], "reduc": [6, 10, 12, 18, 22, 23], "beta": 6, "lp_norm": 6, "core": [7, 9, 15, 18, 19, 20, 21], "often": [7, 15], "impos": [7, 15, 22, 25], "pytorch": [7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25], "binary_sign": [7, 8], "compute_max_mantissa": 7, "mantissa_bit_width": 7, "dpu_round": [7, 8], "dpu": 7, "round": [7, 8, 17, 20, 21, 26], "get_upper_bound_on_l1_norm": 7, "accumulator_bit_width": 7, "upper": 7, "norm": [7, 17], "guarante": 7, "overflow": 7, "given": [7, 17, 19, 20, 21], "deriv": [7, 11, 21, 22], "a2q": 7, "awar": [7, 10, 11, 12, 15, 19, 20, 21, 22], "colbert": 7, "petri": 7, "koenig": 7, "assum": [7, 20, 21, 26], "THe": 7, "max_float": 7, "max_mantissa": 7, "maximum": [7, 15, 21], "indic": [7, 26], "repres": [7, 11, 17, 19, 20, 21, 22, 23], "unsign": [7, 11, 15, 17, 18, 26], "avail": [7, 13, 15, 21, 23, 26], "127": [7, 15, 17, 18, 21], "254": [7, 21], "255": 7, "minimum": [7, 17], "128": [7, 15, 17, 18, 21], "round_to_zero": [7, 8], "toward": [7, 10, 22], "gener": [7, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26], "support": [7, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26], "differenti": [7, 21], "tensor_clamp_": [7, 8], "In": [7, 11, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26], "place": [7, 11, 15, 21], "Not": [7, 20, 23], "wrt": 7, "straight": [7, 8, 15, 22], "estim": [7, 8, 13, 22], "dispatch": 7, "either": [7, 11, 15, 17, 19, 21, 22], "nativ": [7, 13], "just": [7, 11, 13, 15, 18, 20, 21, 22, 26], "time": [7, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23], "autograd_ste_op": [7, 22], "allow": [7, 15, 17, 18, 19, 20, 21, 22, 23, 26], "built": [7, 13, 17, 21, 22], "abs_binary_sign_grad": [7, 8], "ab": [7, 8, 15, 21], "subgradi": [7, 8], "compar": [7, 8, 11, 18, 19, 23, 26], "abs_binary_sign_grad_impl": [7, 8], "its": [7, 10, 11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "requires_grad": [7, 21], "item": [7, 15, 18, 20], "binary_sign_ste_impl": [7, 8], "binarysignstefnbackward": 7, "ceil": [7, 8], "ceil_ste_impl": [7, 8], "ceilstefnbackward": [7, 21], "dpu_round_ste_impl": [7, 8], "dpuroundstefnbackward": 7, "floor": [7, 8], "floor_ste_impl": [7, 8], "floorstefnbackward": 7, "round_ste_impl": [7, 8], "round_to_zero_ste_impl": [7, 8], "roundtozerostefnbackward": 7, "alwai": [7, 8, 11, 18, 19, 20, 21, 22, 23], "scalar_clamp_min_ste_impl": [7, 8], "c": [7, 10, 13, 14, 18, 22], "5000": 7, "4000": [7, 19], "scalarclampminstefnbackward": 7, "scalar_clamp_st": [7, 8], "scalar_clamp_ste_impl": [7, 8], "scalarclampstefnbackward": 7, "tensor_clamp_ste_impl": [7, 8], "tensorclampstefnbackward": 7, "tensor_clamp_ste_impl_": [7, 8], "inplacetensorclampstefnbackward": 7, "ternary_sign_ste_impl": [7, 8], "ternarysignstefnbackward": 7, "induc": 7, "flatten": [7, 18], "certain": [7, 12, 15, 19, 21, 22, 25], "featur": [7, 15, 17, 18, 19, 20, 21, 22, 25], "last": [7, 15, 17, 18, 20, 21, 22], "24": [7, 15, 18, 19, 20, 21], "flat": [7, 15, 22], "absbinarysigngradfn": 8, "kwarg": [8, 11, 15, 18, 19, 20, 21], "alias": 8, "see": [8, 10, 15, 17, 18, 20, 21, 23], "detail": [8, 11, 22, 26], "binarysignstefn": 8, "ceilstefn": 8, "dpuroundstefn": 8, "floorstefn": 8, "inplacetensorclampstefn": 8, "roundstefn": 8, "roundtozerostefn": 8, "scalarclampminstefn": 8, "invok": [8, 21, 22], "scalarclampstefn": 8, "tensorclampstefn": 8, "ternarysignstefn": 8, "wip": 9, "packag": [9, 13, 14, 15, 17, 18, 19, 20, 21, 22, 26], "still": [9, 10, 15, 17, 19, 21, 23, 26], "miss": [9, 13, 15, 18, 21], "op": [9, 19, 20, 22], "why": [10, 11, 15, 20, 21], "target": [10, 12, 18, 21, 22, 25, 26], "specif": [10, 15, 21, 22, 23, 26], "itself": [10, 15, 18, 21, 22, 23, 25, 26], "fbgemm": 10, "qnnpack": 10, "platform": [10, 12, 14, 25], "novel": [10, 21], "algorithm": [10, 11, 15, 18, 21, 22, 23, 26], "varieti": [10, 21], "hardwar": [10, 12, 18, 20, 21, 22, 23, 25], "loos": 10, "assumpt": [10, 20, 21, 22], "affin": [10, 12, 20, 21, 22], "how": [10, 11, 13, 15, 17, 18, 19, 20, 22, 26], "z": 10, "find": [10, 19, 23], "document": [10, 25], "spars": 10, "until": [10, 15, 18, 19, 20, 21], "situat": [10, 15, 20, 21, 22], "improv": [10, 23], "feel": [10, 26], "free": [10, 26], "open": [10, 23, 26], "issu": [10, 15, 19, 20, 21, 23, 26], "github": [10, 21], "slow": [10, 14, 19, 23], "fit": [10, 22], "what": [10, 11, 18, 20, 21, 22, 23], "do": [10, 11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "involv": [10, 19, 21, 22], "lot": [10, 21, 23, 26], "element": [10, 18, 26], "carri": [10, 15, 22], "low": [10, 11, 17, 20, 21, 25], "arithmet": [10, 22], "intens": 10, "contribut": [10, 15, 23], "more": [10, 11, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26], "graph": [10, 15, 17, 19, 21, 23, 26], "backproprag": 10, "As": [10, 15, 17, 18, 19, 20, 21, 23, 25], "typic": [10, 13, 15, 18, 20, 21, 22], "up": [10, 15, 18, 23, 26], "slower": [10, 14, 23], "resourc": 10, "than": [10, 11, 14, 15, 17, 18, 19, 21, 22, 23, 26], "particular": [10, 15, 17, 18, 19, 21, 22, 23, 26], "bias": [10, 15, 20, 22], "greater": 10, "flexibl": [10, 15, 22, 26], "cost": [10, 21, 22], "effieci": 10, "principl": [10, 15, 20, 21], "trade": [10, 23], "off": [10, 23], "complex": [10, 15, 20, 22], "effici": [10, 14, 18], "To": [10, 11, 14, 15, 18, 19, 20, 21, 22], "mitig": [10, 15, 19], "somewhat": 10, "down": 10, "try": [10, 15, 18, 19, 20, 21, 22, 23, 26], "report": 10, "section": [10, 11, 21, 22], "thought": 10, "wa": [10, 15, 18, 19, 20, 21, 22], "make": [10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23], "my": 10, "model": [10, 12, 13, 14, 15, 19, 21, 22, 25, 26], "faster": [10, 23], "am": [10, 23], "wrong": 10, "concern": [10, 20, 22, 23], "precis": [10, 11, 12, 17, 21, 22, 23], "data": [10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23], "path": [10, 12, 17, 26], "doe": [10, 11, 15, 17, 21, 22, 23, 26], "acceler": [10, 11, 12, 14, 17, 19, 21, 25], "own": [10, 11, 12, 13, 15, 18, 19, 20, 21, 23, 26], "achiev": [10, 15, 22, 26], "you": [10, 14, 15, 17, 21, 22, 23, 26], "export": [10, 12, 14, 18, 28], "your": [10, 13, 17, 18, 26], "downstream": [10, 25], "toolchain": [10, 11, 14, 21, 25], "pu": 10, "float16": 10, "bfloat16": 10, "bfloat19": 10, "datatyp": [10, 21, 25], "float32": [10, 19], "been": [10, 11, 12, 15, 18, 19, 20, 21, 22, 23, 26], "test": [10, 23, 26], "That": [10, 15, 18, 20, 21, 22], "tpu": 10, "xla": 10, "math": [10, 21], "term": [10, 11, 14, 15, 18, 20, 21, 22, 26], "reason": [10, 15, 18, 19, 20, 21], "risk": [10, 13], "serv": [11, 15, 17, 18, 19, 21], "goal": [11, 15, 17], "With": [11, 15, 18, 19, 20, 21, 22, 23], "flow": [11, 21, 25], "By": [11, 14, 18, 20, 21], "write": [11, 26], "possibli": [11, 15, 22, 23], "modifi": [11, 15, 19], "origin": [11, 15, 20, 21], "definit": [11, 15, 17, 19, 21, 22, 23, 26], "automat": [11, 15, 17, 20, 21, 22, 23], "onc": [11, 17, 20, 23, 26], "wai": [11, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26], "post": 11, "qat": [11, 18, 23, 26], "scratch": [11, 15], "finetun": [11, 15], "follow": [11, 15, 17, 18, 19, 20, 21, 26], "combin": [11, 12, 21, 23, 26], "best": [11, 15, 18, 23], "approach": [11, 14, 17, 19, 21, 23], "checkout": 11, "done": [11, 15, 17, 20, 26], "imagenet": 11, "classif": 11, "torchvis": 11, "our": [11, 15, 17, 18, 21, 23, 26], "script": [11, 26], "we": [11, 15, 17, 18, 19, 20, 21, 23, 26], "consid": [11, 15, 17, 18, 19, 20], "classic": 11, "neural": [11, 21], "network": [11, 19, 21, 26], "lenet": 11, "let": [11, 15, 18, 20, 21], "sai": [11, 15, 18, 20, 21, 22], "interest": [11, 12, 15, 21, 23, 26], "assess": 11, "well": [11, 12, 20, 21, 22, 23], "cifar10": 11, "For": [11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 26], "purpos": [11, 18, 19, 21, 26], "tutori": [11, 12, 15, 17, 18, 19, 20, 26], "mix": [11, 18, 20, 22], "tradit": [11, 15, 21], "case": [11, 13, 15, 17, 18, 19, 20, 21, 22, 23], "quantconv2d": [11, 15, 17, 18, 21, 22], "quantlinear": [11, 17, 19, 20, 26], "specifi": [11, 17, 18, 22, 26], "weight_bit_width": [11, 17, 19, 21], "relu": [11, 15, 17, 18, 21], "max": [11, 15, 17, 20, 21], "pool": [11, 20], "leverag": [11, 15, 17, 19, 21, 22, 23], "usual": [11, 20], "max_pool2d": [11, 20], "result": [11, 15, 18, 19, 20, 25], "modul": [11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "f": [11, 17, 19, 20, 21], "qnn": [11, 17, 26], "quantweightlenet": 11, "def": [11, 15, 17, 18, 19, 20, 21, 26], "__init__": [11, 15, 17, 18, 19, 20, 21], "self": [11, 15, 17, 18, 19, 20, 21], "super": [11, 12, 15, 17, 18, 19, 20, 21, 25, 26], "conv1": 11, "relu1": 11, "conv2": 11, "relu2": 11, "fc1": 11, "120": [11, 15, 18], "relu3": 11, "fc2": 11, "84": 11, "relu4": 11, "fc3": 11, "reshap": 11, "quant_weight_lenet": 11, "advantag": [11, 15, 21, 22], "storag": 11, "doesn": [11, 15, 17, 18, 20, 21, 22], "convert": [11, 17, 19], "practic": [11, 18, 20, 21, 26], "want": [11, 15, 18, 20, 21, 22, 26], "too": [11, 15, 18, 19, 23], "now": [11, 15, 18, 19, 20, 21, 22, 23], "so": [11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23], "replac": [11, 19, 21], "quantrelu": [11, 15, 17, 18, 22], "addition": [11, 18, 22], "veri": [11, 14, 15, 18, 20, 21, 23], "introduc": [11, 15, 17, 18, 19, 21, 23, 26], "quantident": [11, 18, 19, 20], "begin": 11, "int8bia": [11, 20], "biasquant": 11, "quantweightactlenet": 11, "quant_inp": 11, "quant_weight_act_lenet": 11, "coupl": [11, 15, 18, 19, 20], "thing": [11, 15, 18, 19, 20, 21, 26], "instanti": [11, 15, 19, 21, 22, 26], "each": [11, 15, 17, 18, 19, 22, 23, 25], "fact": [11, 18], "int4": 11, "15": [11, 15, 17, 18, 19, 20, 21], "dequant": [11, 17, 18, 20, 21, 22], "look": [11, 15, 17, 18, 19, 20, 21, 22, 26], "inform": [11, 15, 18, 20, 21, 22], "return_quant_tensor": [11, 15, 18, 19, 20, 21, 22], "int32bia": [11, 17, 19], "quantweightactbiaslenet": 11, "lowprecisionlenet": 11, "bias_quant": [11, 17, 19, 20, 21, 22], "quant_weight_act_bias_lenet": 11, "scenario": [11, 14, 15, 17, 18, 19, 20, 21, 22, 23], "propag": [11, 20], "quanttensor": [11, 15, 18, 19, 23], "next": [11, 18, 23], "ha": [11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 26], "structur": [11, 15, 19, 20, 21, 22, 23], "metadata": [11, 18, 19, 20], "about": [11, 12, 15, 18, 20, 21, 26], "similar": [11, 15, 17, 18, 19, 20, 22, 26], "qint": 11, "friendli": [11, 21, 23], "affect": [11, 19], "chang": [11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "bias_scal": 11, "input_scal": [11, 20, 21], "weight_scal": [11, 21], "commonli": [11, 22], "read": [11, 26], "invari": [11, 20, 21], "without": [11, 13, 15, 17, 20, 21, 22, 23, 26], "happen": [11, 13, 15, 17, 18, 20, 21, 22], "intermedi": [11, 17, 21, 22], "One": 11, "popular": [11, 15, 26], "qdq": [11, 17], "qcdq": [11, 19], "insert": [11, 15, 17, 21], "clip": [11, 19], "node": [11, 17, 19, 21], "export_onnx_qcdq": [11, 17, 19], "export_path": [11, 17, 19, 21], "4b_weight_lenet": 11, "4b_weight_act_lenet": 11, "4b_weight_act_bias_lenet": 11, "check": [11, 18, 19, 26], "recurr": [11, 19], "overview": 11, "librari": [11, 15, 17, 19, 21, 22, 26], "tvmcon": 11, "setup": 12, "get": [12, 14, 15, 18, 19, 20, 21, 23, 26], "start": [12, 17, 19, 21, 22, 23, 26], "guid": 12, "faq": 12, "build": [12, 18, 21, 22], "block": [12, 22, 26], "abstract": [12, 15, 21, 22], "new": [12, 15, 18, 21, 22, 23, 26], "techinqu": 12, "practition": 12, "techniqu": [12, 15], "scheme": 12, "framework": 12, "under": [12, 15, 20, 21, 22], "unifi": 12, "layer": [12, 13, 17, 18, 19, 20, 25, 26], "finn": [12, 14, 20, 21, 25], "onnxruntim": [12, 14, 17, 19, 25], "successfulli": [12, 15, 19, 21], "adopt": [12, 14, 15, 18, 19, 20, 21, 22], "project": 12, "larg": 12, "commerci": 12, "deploy": 12, "cpu": [12, 26], "gpu": [12, 14], "custom": [12, 14, 17, 19, 22, 26], "fpga": [12, 14, 21, 25], "style": [12, 15, 17, 18, 21, 22, 26], "focu": [12, 20], "box": 12, "few": [13, 15, 19, 20, 21, 22, 23, 26], "boolean": [13, 15, 20], "global": 13, "enviroment": 13, "config": [13, 15, 19, 21, 23], "jit_en": 13, "written": 13, "appropri": [13, 14, 15, 21, 22], "cannot": [13, 15, 21, 22, 23], "found": [13, 15, 19, 20, 21, 22, 23, 26], "warn": [13, 18, 19, 20, 21], "fall": [13, 23], "back": [13, 19, 22], "python": [13, 14, 15, 17, 19, 20, 21, 22], "pytorch_jit": 13, "ignore_missing_kei": [13, 15, 19, 21], "whenev": [13, 15, 19, 21, 22], "top": [13, 14, 15, 19, 20, 21, 22], "intern": [13, 14, 15, 18, 19, 20, 21], "better": [13, 23, 26], "altern": [13, 17, 18, 19, 21, 26], "load_state_dict": [13, 15, 19, 21], "strict": [13, 15, 21], "would": [13, 14, 15, 17, 18, 19, 20, 21, 23], "kind": [13, 15, 21, 22], "mismatch": [13, 18], "brevitas_verbos": 13, "verbos": [13, 15, 21], "brevitas_native_ste_backend": 13, "native_ste_backend_en": 13, "jit": [13, 14, 15, 18, 19, 20, 21, 22], "brevitas_reinit_on_state_dict_load": 13, "reinit_on_state_dict_load": 13, "control": [13, 15, 19, 21, 22, 23, 26], "trigger": [13, 15, 18, 19, 20, 21], "re": [13, 15, 17, 19, 20, 21, 22, 26], "whose": [13, 18, 21, 22], "recomput": [13, 21, 22], "brevitas_log": 13, "critic": 13, "much": [13, 15, 18, 20, 22, 26], "feedback": 13, "least": 13, "debug": 13, "info": [13, 26], "9": [14, 15, 17, 18, 19, 20, 21], "recent": [14, 15, 18, 20, 21, 23, 26], "untest": 14, "window": 14, "linux": 14, "maco": 14, "recommend": 14, "latest": [14, 17, 19, 23], "pip": [14, 17, 19, 21], "directli": [14, 17, 19, 20, 21, 22, 26], "git": 14, "com": [14, 21], "small": [14, 21, 23], "becaus": [14, 15, 17, 18, 19, 20, 21, 22, 23, 25], "lt": [14, 15, 18, 19, 20, 21], "benefit": [14, 23], "almost": [14, 21], "never": 14, "necessari": [14, 15, 18, 19, 20, 22, 23], "distribut": [14, 18, 22], "cpp": [14, 18, 20, 21, 22], "file": [14, 15, 18, 20, 21, 22], "togeth": [14, 15, 18, 19, 20, 21, 22, 23, 26], "util": [14, 19], "cpp_extens": 14, "mechan": [14, 21, 22], "simplifi": [14, 22, 23], "mantain": 14, "precompil": 14, "possibl": [14, 15, 17, 19, 20, 21, 22, 23, 26], "put": [14, 21], "burden": 14, "sure": [14, 17, 18, 19, 20, 22], "present": [14, 15, 17, 21], "primit": 14, "fake": [14, 17, 21], "dataflow": [14, 21, 25], "integr": [14, 21], "onnx": [14, 18, 19, 20, 25], "broad": [15, 23], "sens": [15, 21], "anyth": [15, 18, 19, 20, 21], "terminologi": 15, "prefer": 15, "tensor_qu": [15, 18, 21, 22], "attribut": [15, 18, 21, 22], "seen": [15, 17, 18, 20, 21, 22], "easili": [15, 18, 20, 21, 22, 26], "said": [15, 18, 19], "scaled_int": [15, 17, 18, 20, 21, 22], "int8actpertensorfloat": [15, 17, 18, 19, 20, 21], "issubclass": 15, "delay_wrapp": [15, 18, 21], "delay_impl": [15, 18, 21], "_nodelai": [15, 18, 21], "stats_input_view_shape_impl": [15, 18, 21], "_stat": [15, 18, 21], "stats_impl": [15, 18, 21], "restrict_sc": [15, 18, 21], "_restrictvalu": [15, 18, 21], "restrict_value_impl": [15, 18, 21], "restrict_threshold": [15, 18, 21], "clamp_scal": [15, 18, 21], "_clampvalu": [15, 18, 21], "clamp_min_st": [15, 18, 21], "restrict_inplace_preprocess": [15, 18, 21], "restrict_scaling_pr": [15, 18, 21], "restrict_threshold_pr": [15, 18, 21], "msb_clamp_bit_width_impl": [15, 18, 21], "understand": [15, 18, 21, 22, 23], "explod": 15, "thank": [15, 21, 22], "straightforward": 15, "numpi": [15, 17, 19, 21], "execut": [15, 17, 18, 19, 21, 22, 23], "come": [15, 17, 18, 21, 23], "program": 15, "pose": [15, 22], "problem": [15, 17, 20], "mani": [15, 18, 20, 21, 22, 23, 26], "decis": [15, 23], "know": [15, 22], "spot": 15, "line": [15, 18, 20, 21, 26], "later": [15, 18, 21, 22], "yet": [15, 19], "after": [15, 18, 20, 21, 23, 26], "wouldn": [15, 20, 21, 22], "loop": [15, 23], "might": [15, 18, 19, 20, 21, 22, 23], "react": 15, "onli": [15, 17, 18, 20, 21, 22, 23, 25, 26], "world": [15, 21], "hard": 15, "impact": [15, 19], "recompil": [15, 23], "lossi": 15, "process": [15, 21, 22, 23, 26], "compon": [15, 21, 22], "simpli": [15, 18, 20, 21, 22, 26], "declar": [15, 21, 22], "arbitrarli": 15, "injector": 15, "older": [15, 22], "excel": 15, "complic": [15, 22, 23], "interwin": 15, "turn": [15, 21], "list": [15, 18, 22, 23, 26], "capabl": [15, 17, 22], "assembli": [15, 21], "goe": [15, 17, 21, 23], "context": [15, 20, 21, 23], "gather": [15, 18], "hyperparamet": [15, 21, 22], "thei": [15, 17, 18, 19, 20, 21, 22, 26], "assembl": [15, 22], "demand": [15, 21], "simpl": 15, "mention": [15, 17, 21], "heavi": 15, "binar": 15, "inspect": [15, 19, 20, 21], "ipython": [15, 17, 19, 20, 21], "displai": [15, 17, 19, 20, 21], "markdown": [15, 19, 20, 21], "helper": [15, 17, 18, 19, 20, 21], "assert_with_messag": [15, 17, 18, 19, 20, 21], "condit": [15, 17, 18, 19, 20, 21], "assert": [15, 17, 18, 19, 20, 21, 26], "print": [15, 17, 18, 19, 20, 21], "pretty_print_sourc": [15, 19, 20, 21], "n": [15, 19, 20, 21], "getsourc": [15, 19, 20, 21], "func": [15, 21], "script_method": 15, "quit": [15, 18, 19, 20, 22], "apart": [15, 18], "fix": [15, 22, 23], "pick": [15, 18, 20, 21, 23], "equal": [15, 17, 18, 20, 21, 26], "random": [15, 18, 19, 20], "seed": [15, 17, 18, 20], "notebook": [15, 17, 20, 21], "manual_se": [15, 17, 18, 19, 20, 21], "manual_tensor_qu": 15, "gt": [15, 18, 19, 20, 21], "divbackward0": [15, 19, 20, 21], "noth": 15, "surpris": 15, "expect": [15, 18, 19, 20, 21, 22, 26], "limit": [15, 17, 23, 26], "alloc": [15, 19, 22], "mybinaryquant": 15, "inj_tensor_qu": 15, "retriev": [15, 21], "express": [15, 21, 22], "overrid": [15, 17, 19, 20, 21, 22], "mychildbinaryquant": 15, "child_inj_tensor_qu": 15, "Or": [15, 20], "piec": [15, 21, 22], "mybinaryimpl": 15, "myscalingimpl": 15, "mycomposedbinaryquant": 15, "comp_inj_tensor_qu": 15, "live": 15, "mostli": [15, 26], "land": 15, "afford": 15, "v": [15, 22, 26], "conveni": [15, 21], "proxy_class": [15, 18, 21, 26], "weightquantproxyfrominjector": [15, 21], "mybinaryweightquant": 15, "11": [15, 18, 19, 20, 21], "binary_weight_quant_conv": 15, "weight_quant": [15, 19, 20, 21, 22, 26], "quant_weight": [15, 19, 20, 21, 22], "typeerror": 15, "those": [15, 18, 20, 21], "explicitli": [15, 18, 20], "idea": [15, 21, 22, 23], "12": [15, 18, 19, 20, 21, 23], "mysignedbinaryweightquant": 15, "signed_quant_weight": 15, "intquanttensor": [15, 18, 19, 20, 21], "signed_t": [15, 18, 19, 20, 21], "training_t": [15, 18, 19, 20, 21], "13": [15, 17, 18, 19, 20, 21], "is_valid": [15, 18, 20], "And": [15, 21], "add": [15, 18, 19, 20, 26], "There": [15, 17, 20], "simpler": 15, "syntax": [15, 18, 22], "did": [15, 17, 21, 23], "could": [15, 18, 20, 21, 23, 26], "14": [15, 18, 19, 20, 21], "small_scale_quant_conv": 15, "weight_sign": 15, "weight_": [15, 21, 22], "exist": [15, 18, 21, 22], "input_": [15, 21, 22], "output_": [15, 21, 22], "bias_": [15, 21, 22], "arbitrari": [15, 20, 21], "realli": [15, 18, 22], "actquantproxyfrominjector": [15, 18, 21], "mysignedbinaryactquant": 15, "binary_relu": 15, "act_quant": [15, 18, 21], "proj": [15, 17, 18, 19, 20, 21], "xlab": [15, 17, 18, 19, 20, 21], "nfraser": [15, 17, 18, 19, 20, 21], "opt": [15, 17, 18, 19, 20, 21], "miniforge3": [15, 17, 18, 19, 20, 21], "20231115_brv_pt1": [15, 17, 18, 19, 20, 21], "lib": [15, 17, 18, 19, 20, 21], "python3": [15, 17, 18, 19, 20, 21], "site": [15, 17, 18, 19, 20, 21], "_tensor": [15, 18, 19, 20, 21], "py": [15, 17, 18, 19, 20, 21], "1255": [15, 18, 19, 20, 21], "userwarn": [15, 18, 19, 20, 21], "associ": [15, 17, 18, 19, 20, 21], "subject": [15, 18, 19, 20, 21], "stabl": [15, 18, 19, 20, 21], "conda": [15, 18, 19, 20, 21], "bld": [15, 18, 19, 20, 21], "pytorch_1670525541990": [15, 18, 19, 20, 21], "c10": [15, 18, 19, 20, 21], "tensorimpl": [15, 18, 19, 20, 21], "h": [15, 18, 19, 20, 21], "1758": [15, 18, 19, 20, 21], "renam": [15, 18, 19, 20, 21], "isn": 15, "keywork": 15, "small_scale_binary_ident": 15, "001": 15, "0010": [15, 20], "far": [15, 18, 19, 21], "show": [15, 17, 21], "sort": [15, 18, 20, 21], "shine": 15, "17": [15, 18, 19, 20, 21], "paramfrommaxweightquant": 15, "decor": 15, "di": [15, 22], "spirit": 15, "properti": [15, 21], "18": [15, 18, 19, 20, 21, 23], "param_from_max_quant_conv": 15, "1820": 15, "inde": [15, 20], "verifi": [15, 20], "19": [15, 18, 19, 20, 21], "simuat": 15, "separ": [15, 20, 21], "conv2d": [15, 20, 22], "float_conv": [15, 20], "1924": [15, 19], "maxbackward1": 15, "21": [15, 18, 19, 20, 21], "traceback": [15, 18, 20, 21], "cell": [15, 18, 19, 20, 21], "1671": [15, 21], "1666": [15, 21], "error_msg": [15, 21], "1667": [15, 21], "39": [15, 17, 18, 19, 20, 21], "1668": [15, 18, 21], "join": [15, 21], "34": [15, 18, 20, 21], "k": [15, 21], "missing_kei": [15, 21], "1670": [15, 21], "len": [15, 21], "1672": [15, 21], "__class__": [15, 21], "__name__": [15, 18, 21], "1673": [15, 21], "_incompatiblekei": [15, 21], "unexpected_kei": [15, 21], "ouch": 15, "forgiv": 15, "22": [15, 18, 19, 20, 21], "again": [15, 18, 20, 22], "23": [15, 18, 19, 20, 21], "behind": [15, 22, 26], "strategi": [15, 21], "among": [15, 17, 19, 22, 26], "quant_conv1": 15, "quant_conv2": 15, "26": [15, 19, 20, 21], "access": 15, "parent": [15, 18], "27": [15, 19, 20, 21], "sharedparamfrommeanweightquant": 15, "isinst": [15, 18, 20, 21], "cat": [15, 21], "els": [15, 18, 19, 20, 21], "old_quant_conv1_scal": 15, "new_quant_conv1_scal": 15, "28": [15, 20, 21], "eager": [15, 21, 23], "don": [15, 18, 19, 20, 21, 23], "semant": [15, 19], "correctli": [15, 18, 20, 21, 26], "easier": [15, 23], "enough": [15, 22, 23], "someth": [15, 18, 21], "mind": [15, 18], "linear": [15, 17, 18, 21, 26], "output_qu": [15, 17, 18, 20, 21, 22], "input_qu": [15, 17, 18, 20, 21, 22], "identityqu": 15, "count": 15, "even": [15, 17, 18, 20, 21, 22, 23], "though": [15, 17, 18, 21, 25], "belong": 15, "rather": [15, 17, 21, 22, 26], "29": [15, 19, 20, 21], "quant_conv_w_init": 15, "init": [15, 18, 20], "uniform_": 15, "anymor": [15, 23], "30": [15, 18, 20, 21], "init_tensor_qu": [15, 18, 21], "plan": [15, 26], "distinguish": 15, "final": [15, 17, 18, 19, 20, 22], "illustr": [15, 19, 25], "extens": [15, 17, 22], "abl": [15, 21, 26], "switch": [15, 21, 22], "logic": [15, 18, 20, 21, 22], "hierarchi": [15, 22], "leav": 15, "expos": [15, 19, 20, 21, 22, 26], "commonquant": 15, "is_clamp": 15, "scaling_per_output_channel": [15, 18, 21, 22], "per_channel_broadcastable_shap": [15, 18], "advancedweightquant": 15, "num_ch": 15, "advancedactquant": 15, "bunch": [15, 19, 22], "unpack": [15, 21], "special": [15, 18, 22, 23], "alreadi": [15, 17, 18, 19, 20, 21, 22, 23], "chain": 15, "per_channel_quant_conv": 15, "weight_is_clamp": 15, "weight_scaling_per_output_channel": [15, 17, 19, 21], "1612": 15, "vector": 15, "everyth": [15, 19, 21, 22, 23, 26], "observ": [15, 17, 18, 19, 20, 23], "33": [15, 18, 19, 21], "1899": 15, "similarli": [15, 17, 19, 21, 23], "quant_ident": [15, 18, 19, 20, 21], "35": [15, 21], "dependencyerror": [15, 18], "quant_activ": [15, 18], "113": 15, "108": 15, "109": 15, "110": 15, "actquanttyp": [15, 18, 20, 21], "112": 15, "quantnlal": [15, 18], "114": [15, 21], "115": 15, "116": 15, "act_impl": [15, 18], "117": 15, "passthrough_act": [15, 18], "118": [15, 18], "119": [15, 18], "quant_lay": [15, 18, 20, 21], "quantnonlinearactlay": [15, 18], "quantlayermixin": [15, 18], "quantinputmixin": [15, 18, 22], "quantnonlinearactmixin": [15, 18], "mixin": [15, 18, 19], "act": [15, 17, 18, 22, 23], "66": [15, 18, 21], "act_proxy_prefix": [15, 18], "act_kwargs_prefix": [15, 18], "55": [15, 18], "56": [15, 18], "57": [15, 18], "61": [15, 18, 21], "62": [15, 18], "63": [15, 18], "prefixed_kwarg": [15, 18], "64": [15, 18], "65": [15, 18, 21], "quantproxymixin": [15, 18], "67": [15, 18], "68": [15, 18], "69": [15, 18], "proxy_prefix": [15, 18], "70": [15, 18], "kwargs_prefix": [15, 18], "71": [15, 18], "proxy_protocol": [15, 18], "actquantproxyprotocol": [15, 18], "72": [15, 18], "none_quant_injector": [15, 18], "noneactqu": [15, 18], "73": [15, 18], "74": [15, 18], "52": [15, 18], "50": [15, 17, 18, 19], "quant_injector": [15, 18], "51": [15, 18], "filter_kwarg": [15, 18], "53": [15, 18, 19, 20, 21], "54": [15, 18], "runtime_qu": [15, 18], "221": [15, 18], "220": [15, 18], "222": [15, 18], "cache_class": [15, 18], "_cachedio": [15, 18], "94": [15, 18], "actquantproxyfrominjectorbas": [15, 18], "93": [15, 18], "quantproxyfrominjector": [15, 18], "95": [15, 18], "96": [15, 18], "is_passthrough_act": [15, 18], "_is_passthrough_act": [15, 18], "quant_proxi": [15, 18], "78": [15, 18], "modulelist": [15, 18, 19], "79": [15, 18], "tracked_module_list": [15, 18], "add_tracked_modul": [15, 18], "81": [15, 18], "disable_qu": [15, 18], "82": [15, 18], "append": [15, 18], "update_tracked_modul": [15, 18], "121": [15, 18], "122": [15, 18, 21], "149": [15, 18, 20, 21], "148": [15, 18, 20, 21], "150": [15, 18, 20, 21], "151": [15, 18, 20, 21], "hidden": [15, 19], "frame": 15, "_depend": 15, "_thisspec": 15, "__call__": 15, "__self__": 15, "49": 15, "getattr": 15, "symbol": [15, 21], "messag": [15, 18], "tri": [15, 20, 21], "129": [15, 18], "_extendedinjectortyp": [15, 18], "__getattr__": [15, 18], "cl": [15, 18], "attrnam": [15, 18], "126": [15, 18], "resolv": [15, 18], "current_attr": [15, 18], "131": [15, 18], "marker": [15, 18], "have_default": [15, 18], "spec": [15, 18], "133": [15, 18], "issubset": [15, 18], "cach": [15, 18, 20, 23], "36": [15, 21], "power": [15, 21, 22], "complet": [15, 21], "instal": [17, 19, 21], "pypi": [17, 21], "onnxoptim": [17, 21], "netron": [17, 19, 21], "visual": [17, 19, 21], "satisfi": [17, 21], "mai": [17, 19, 23], "restart": 17, "kernel": [17, 21, 23], "main": [17, 22, 23, 26], "qlinearconv": [17, 21], "qlinearmatmul": [17, 21], "cover": [17, 18, 21], "qonnx": [17, 19, 21], "over": [17, 18, 21, 22, 23], "q": 17, "dq": 17, "three": [17, 23, 26], "fp": [17, 21], "u": [17, 23], "int8": [17, 20, 21], "ntenger": 17, "min": 17, "equival": [17, 18, 21], "sever": [17, 26], "implic": [17, 19], "int32": 17, "deduantizelinear": 17, "addit": [17, 19, 20, 21, 22, 25], "desir": [17, 18], "opset": [17, 19, 20, 21], "consider": [17, 23, 26], "quantconv1d": [17, 20, 21], "quantconvtranspose1d": [17, 20, 21], "quantconvtranspose2d": [17, 20, 21], "offer": [17, 26], "share": [17, 19, 22, 23], "ifram": [17, 19, 21], "show_netron": [17, 19, 21], "model_path": [17, 19, 21], "port": [17, 19, 21], "sleep": [17, 19, 21], "address": [17, 19, 21], "localhost": [17, 19, 21], "brows": [17, 19, 21], "src": [17, 19, 21], "100": [17, 18, 19, 21], "height": [17, 18, 19, 21], "400": [17, 19, 21], "in_ch": 17, "out_ch": 17, "batch_siz": [17, 19], "quant_linear_qcdq": 17, "exported_model": [17, 19, 21], "opset_vers": [17, 19], "8082": [17, 19, 21], "moreov": 17, "interv": [17, 20], "perfectli": [17, 18], "symmetr": 17, "absorb": 17, "fusion": 17, "remain": [17, 22], "entir": [17, 21, 23], "quantmodel": 17, "quant_model_qcdq": 17, "8083": [17, 19, 21], "thu": [17, 22], "furthermor": [17, 18], "uint8": 17, "expand": [17, 23, 26], "imposs": 17, "less": [17, 23], "etc": [17, 26], "eval": [17, 18, 21], "quant_model_3b_4b_qcdq": 17, "8084": [17, 21], "captur": [17, 19, 21], "examin": 17, "ort": [17, 19], "sess_opt": 17, "sessionopt": 17, "sess": [17, 19], "inferencesess": [17, 19], "input_nam": [17, 19], "get_input": [17, 19], "pred_onx": 17, "out_brevita": 17, "out_ort": 17, "allclos": [17, 19], "09": [17, 19], "990808285": 17, "cc": [17, 19], "1283": [17, 19], "appear": [17, 19], "treat": [17, 18, 19], "prevent": [17, 19], "fold": [17, 19], "tool": [17, 19], "remove_initializer_from_input": [17, 19], "actual": [17, 20, 21, 22], "seem": [17, 26], "must": [17, 26], "behavior": [17, 18], "quantconvnd": 17, "qgemm_ort": 17, "unfortun": 17, "log": [17, 21], "unoptim": 17, "dynamicquantizelinear": 17, "asymmetr": [17, 26], "therefor": [17, 18], "nearest": [17, 21], "shown": [17, 21], "brevitas_exampl": [17, 26], "common": [17, 18, 20, 23], "shifteduint8dynamicactpertensorfloat": 17, "img_siz": 17, "dynamic_quant_model_qcdq": 17, "8086": [17, 19], "deeper": 18, "were": [18, 21, 23], "obtain": [18, 20, 26], "reproduc": [18, 20, 23], "output_quant_conv": [18, 20], "in_channel": [18, 20, 26], "out_channel": [18, 20, 26], "kernel_s": [18, 20, 21], "abov": [18, 20, 21, 22, 26], "default_quant_conv": [18, 20], "output_identity_qu": 18, "out_tensor1": 18, "out_tensor2": 18, "isclos": [18, 20], "nnpack": [18, 20, 21], "unsupport": [18, 20, 21], "input_output_quant_conv": 18, "input_identity_qu": 18, "becom": [18, 20, 23], "clearer": 18, "meantim": 18, "behav": [18, 20, 21, 22, 26], "disabled_quant_ident": 18, "return_quant_ident": 18, "out_tensor": [18, 20], "4566": 18, "5707": 18, "5517": 18, "5897": 18, "5409": 18, "5136": 18, "1902": 18, "0761": 18, "4946": 18, "5029": 18, "4376": 18, "3317": 18, "6361": [18, 20], "0736": 18, "7122": 18, "3780": 18, "1224": 18, "3234": 18, "0844": 18, "0951": 18, "7610": 18, "5980": 18, "0190": 18, "7419": 18, "6278": 18, "6468": 18, "2473": 18, "5327": [18, 19], "1605": [18, 19, 20], "7990": 18, "2936": 18, "3127": 18, "2283": 18, "4351": [18, 19], "3615": 18, "2175": [18, 20], "9214": 18, "depend": [18, 19, 20, 22, 23, 26], "whather": 18, "strip": 18, "implicitli": [18, 20], "out_torch_tensor": 18, "aliasbackward0": 18, "return_disabled_quant_ident": 18, "identity_out_tensor": 18, "uint8actpertensorfloat": [18, 19, 21], "return_quant_relu": 18, "5974": [18, 19], "5402": 18, "5041": 18, "1867": 18, "4481": 18, "3255": 18, "0817": 18, "7083": 18, "3804": 18, "0187": 18, "6254": 18, "6348": [18, 19], "4387": [18, 19], "2334": 18, "7935": 18, "9230": 18, "0093": 18, "preserv": [18, 20], "return_disabled_quant_relu": 18, "relu_out_tensor": 18, "quantsigmoid": 18, "return_disabled_quant_sigmoid": 18, "sigmoid_out_tensor": 18, "assertionerror": 18, "1194": [18, 20, 21], "_call_impl": [18, 20, 21], "1190": [18, 20, 21], "rest": [18, 20, 21], "1191": [18, 20, 21], "1192": [18, 20, 21], "_backward_hook": [18, 20, 21], "_forward_hook": [18, 20, 21], "_forward_pre_hook": [18, 20, 21], "_global_backward_hook": [18, 20, 21], "1193": [18, 20, 21], "_global_forward_hook": [18, 20, 21], "_global_forward_pre_hook": [18, 20, 21], "forward_cal": [18, 20, 21], "1195": [18, 19, 20, 21], "1196": [18, 20, 21], "full_backward_hook": [18, 20, 21], "non_full_backward_hook": [18, 20, 21], "quant_input": [18, 19, 20, 21, 22], "pack_output": 18, "101": 18, "quant_output": [18, 21, 22], "99": [18, 21], "quantlay": [18, 20, 21, 22, 23], "configur": [18, 20, 21, 23, 26], "102": 18, "103": 18, "shifteduint8actpertensorfloat": 18, "neg": [18, 23], "Then": [18, 22], "form": [18, 21], "effect": [18, 19, 21], "shifted_scaled_int": [18, 22], "shifted_quant_ident": 18, "5854": 18, "5485": [18, 20], "5099": 18, "1888": 18, "4532": 18, "3219": 18, "0772": 18, "6996": 18, "3794": 18, "0189": 18, "6232": 18, "6421": 18, "1708": [18, 19], "4343": [18, 21], "2266": [18, 19], "7931": [18, 19], "9262": 18, "relubackward0": 18, "wherebackward0": 18, "3134": 18, "2557": 18, "0392": 18, "4186": 18, "7361": 18, "5340": 18, "8516": 18, "2887": [18, 20], "3175": 18, "8949": 18, "6743": 18, "0722": 18, "0289": 18, "2021": [18, 20], "4907": [18, 20], "against": [18, 22], "default_quant_relu": 18, "3078": 18, "2555": [18, 19], "0397": 18, "4185": 18, "7454": 18, "5427": 18, "8566": 18, "2943": 18, "3269": 18, "8893": 18, "6674": 18, "0785": 18, "0065": [18, 19], "0262": 18, "1962": 18, "4839": 18, "close": 18, "half": 18, "numer": 18, "lost": 18, "mark": [18, 20, 22, 23], "wast": 18, "regard": 18, "premad": 18, "word": 18, "caution": 18, "anticip": 18, "theme": 18, "minim": [18, 19, 21, 22, 23], "interact": [18, 21, 23], "basic": [18, 20, 21], "calibr": [18, 23], "These": [18, 21, 23, 26], "exponenti": [18, 21], "inp1": 18, "inp2": 18, "ones": [18, 26], "out1_train": 18, "out2_train": 18, "out1_ev": 18, "out2_ev": 18, "quanthardtanh": 18, "hardtanh": 18, "manual": [18, 20, 21, 22, 26], "below": [18, 21, 22, 23], "throw": [18, 22], "90": 18, "91": 18, "92": 18, "int8actpertensorfloatminmaxinit": 18, "97": 18, "98": 18, "proxi": [18, 20, 21], "inject": [18, 22, 26], "scaling_init_impl": 18, "concer": 18, "quant_hard_tanh": 18, "256": 18, "mutat": 18, "1st": 18, "dynam": [18, 22, 23], "larger": [18, 21], "feed": [18, 22], "granular": [18, 26], "inp3": 18, "rand": 18, "b": 18, "per_tensor_quant_relu": 18, "9998": 18, "full": [18, 21], "largest": [18, 20], "respons": [18, 22, 23, 26], "1d": 18, "stage": 18, "_zero_hw_sentinel": [18, 21], "fused_activation_quant_proxi": [18, 21], "fusedactivationquantproxi": [18, 21], "activation_impl": [18, 21], "initialis": 18, "implictli": 18, "__": 18, "permut": [18, 21], "2d": 18, "accomplish": [18, 22], "give": [18, 20, 23], "rightmost": 18, "tell": 18, "per_chan_quant_relu": 18, "ideal": 18, "product": 18, "remind": [18, 19], "legal": [18, 20], "encourag": [18, 23], "explain": [18, 20, 22], "drop": [19, 23], "further": [19, 23], "upstream": 19, "input_s": 19, "hidden_s": 19, "num_lay": 19, "nonlinear": 19, "tanh": [19, 20], "batch_first": 19, "bidirect": 19, "int8weightpertensorfloat": [19, 20, 21, 26], "io_quant": 19, "gate_acc_qu": 19, "shared_input_hidden_weight": 19, "layer_impl": 19, "_quantrnnlay": 19, "plu": [19, 22], "four": [19, 20, 22], "gate": 19, "fuse": [19, 21, 23], "fed": 19, "stack": 19, "potenti": [19, 23], "organ": [19, 22], "nest": [19, 21], "direct": [19, 21, 22], "rnn_sublay": 19, "sublayer_numb": 19, "right_to_left_direct": 19, "quant_rnn": 19, "quant_rnn_0_left_to_right": 19, "quant_rnn_0_right_to_left": 19, "quant_rnn_1_left_to_right": 19, "quant_rnn_1_right_to_left": 19, "59": [19, 21], "gate_param": 19, "input_weight": 19, "gonna": [19, 21, 22], "concaten": [19, 22], "bitwidth": 19, "deepspeech": 19, "dai": 19, "qualiti": [19, 26], "count_weight": 19, "sum": [19, 20, 22], "numel": 19, "named_paramet": 19, "quant_rnn_single_direct": 19, "quant_rnn_bidirect": 19, "quant_rnn_bidirectional_shared_input_hidden": 19, "600": 19, "1200": 19, "4b": [19, 21], "6b": 19, "io": 19, "quant_rnn_4b": 19, "io_bit_width": 19, "quant_rnn_4b_0_left_to_right": 19, "input_hidden_weight": 19, "hidden_hidden_weight": 19, "hidden_weight": 19, "o": 19, "0297": 19, "0311": 19, "0298": 19, "0295": 19, "0316": 19, "0318": 19, "0309": 19, "0317": 19, "0319": 19, "0315": 19, "0310": 19, "0312": 19, "pack": 19, "length": 19, "unbatch": 19, "sequenc": 19, "hidden_st": 19, "num_direct": 19, "0062": 19, "2872": 19, "4309": 19, "5495": 19, "4558": 19, "2373": 19, "6807": 19, "4621": 19, "6120": 19, "1124": 19, "3872": 19, "3060": 19, "7681": 19, "3684": 19, "0437": 19, "7369": 19, "3247": 19, "7743": 19, "3372": 19, "5450": 19, "2962": 19, "3969": 19, "3555": 19, "5628": 19, "2429": 19, "4976": 19, "1777": 19, "1244": 19, "0296": 19, "2607": 19, "0948": 19, "5036": 19, "3673": 19, "5213": 19, "7524": 19, "0770": 19, "2691": 19, "6624": 19, "5434": 19, "4968": 19, "0983": 19, "1345": 19, "1242": 19, "0517": 19, "3726": 19, "3053": 19, "1604": 19, "3208": 19, "3105": 19, "4243": 19, "2794": 19, "1035": 19, "0724": 19, "1284": 19, "3337": 19, "5263": 19, "0449": 19, "3081": 19, "1733": 19, "5648": 19, "4942": 19, "1412": 19, "6225": 19, "3401": 19, "5070": 19, "0642": 19, "3722": 19, "2888": 19, "1155": 19, "0579": 19, "0058": [19, 20], "4054": 19, "1564": 19, "5560": 19, "3301": 19, "3533": 19, "1622": 19, "3765": 19, "1216": 19, "0695": 19, "0927": 19, "6139": 19, "1390": [19, 20], "7066": 19, "1274": 19, "2896": [19, 20], "1374": 19, "5745": 19, "0624": 19, "3310": 19, "5183": 19, "1186": 19, "2997": 19, "0375": 19, "6369": 19, "5308": 19, "6307": 19, "5683": 19, "7556": 19, "4933": 19, "3934": 19, "4871": 19, "1066": 19, "1718": 19, "4266": 19, "5569": 19, "0178": 19, "1185": 19, "3910": 19, "2133": 19, "2903": 19, "1837": 19, "2547": 19, "3495": 19, "2311": 19, "6161": 19, "0880": 19, "1966": 19, "3001": 19, "0569": 19, "4140": 19, "1552": 19, "4554": 19, "5175": 19, "2898": 19, "0414": 19, "3985": 19, "0621": 19, "0828": 19, "2225": 19, "2118": 19, "2824": 19, "5840": 19, "3209": 19, "3530": 19, "4043": 19, "3786": 19, "0257": 19, "1990": 19, "1348": 19, "8215": 19, "3016": 19, "0290": [19, 20], "1738": 19, "2664": 19, "4923": 19, "2143": 19, "4170": 19, "4112": 19, "5502": 19, "6024": 19, "7356": 19, "0348": 19, "1043": 19, "1911": 19, "4518": 19, "catbackward0": 19, "0059": 19, "unsqueezebackward0": 19, "2111": 19, "1267": 19, "0060": [19, 21], "6153": 19, "7721": 19, "3740": 19, "5188": 19, "6273": 19, "4162": [19, 21], "2051": 19, "2292": 19, "7239": 19, "6032": 19, "2533": [19, 20, 21], "5067": 19, "6635": 19, "1206": 19, "5730": 19, "0483": 19, "3318": 19, "5742": 19, "0194": 19, "3807": 19, "0710": 19, "6000": 19, "1807": 19, "1355": 19, "4129": 19, "3936": 19, "0903": 19, "1549": 19, "1032": 19, "0645": 19, "4775": 19, "1161": 19, "1097": 19, "0453": 19, "4533": 19, "1036": 19, "2979": 19, "3432": 19, "0777": 19, "6346": 19, "0842": 19, "3302": 19, "4727": 19, "4856": 19, "4144": 19, "7382": 19, "5439": 19, "4792": 19, "4403": 19, "3198": 19, "2741": 19, "6395": 19, "0971": 19, "6052": 19, "5196": 19, "1770": 19, "5025": 19, "1256": 19, "2056": 19, "2684": 19, "0285": 19, "7309": 19, "7194": 19, "1542": 19, "3426": 19, "6509": 19, "0343": 19, "4004": 19, "3151": [19, 20], "0263": 19, "5842": 19, "1641": 19, "3939": 19, "6499": 19, "5186": 19, "1247": 19, "2101": 19, "8337": 19, "1444": 19, "6762": 19, "5317": 19, "1707": 19, "0197": 19, "3197": 19, "0241": 19, "2895": 19, "1749": 19, "4283": [19, 20], "3680": 19, "5248": 19, "2654": 19, "6394": 19, "1327": 19, "3800": 19, "6775": 19, "3355": 19, "2774": 19, "8259": 19, "2000": 19, "5678": 19, "2258": 19, "2710": 19, "5355": 19, "1290": 19, "6710": 19, "3613": 19, "6388": 19, "5226": 19, "6475": 19, "1684": 19, "3820": 19, "3885": 19, "1943": 19, "3238": 19, "2525": 19, "1230": 19, "4921": 19, "8224": 19, "2396": 19, "1554": 19, "0514": 19, "4111": 19, "4625": 19, "1713": 19, "3369": 19, "2512": 19, "2969": 19, "2341": 19, "3597": 19, "1998": 19, "7137": 19, "1370": 19, "0742": 19, "5938": 19, "5424": 19, "4168": 19, "3479": [19, 20], "1969": 19, "4136": 19, "5383": 19, "3085": 19, "4070": 19, "6630": 19, "2823": [19, 21], "1510": 19, "1313": 19, "4464": 19, "0066": 19, "3777": 19, "2074": 19, "7184": 19, "9110": 19, "0148": 19, "1926": 19, "7110": 19, "4222": 19, "9480": 19, "2592": 19, "2222": 19, "2370": 19, "5407": 19, "5851": 19, "1703": 19, "4444": 19, "4814": 19, "7355": 19, "3878": 19, "5282": 19, "2073": 19, "3677": 19, "1805": 19, "1204": 19, "4614": 19, "2474": 19, "7021": 19, "0401": 19, "4346": 19, "4480": 19, "3143": 19, "6887": 19, "6753": 19, "5038": 19, "3650": 19, "6936": 19, "0146": 19, "9345": 19, "1679": 19, "3066": 19, "1825": 19, "4089": [19, 21], "0949": 19, "3870": 19, "2482": 19, "5914": 19, "0803": 19, "1314": 19, "4235": 19, "3797": 19, "1168": 19, "1795": 19, "2308": 19, "0898": 19, "1282": 19, "5579": 19, "1731": 19, "1603": 19, "3142": 19, "1090": 19, "5835": 19, "1475": 19, "0256": 19, "8143": 19, "2437": 19, "4804": 19, "1184": 19, "6843": 19, "1448": [19, 21], "1842": 19, "6383": 19, "1908": 19, "1053": 19, "1316": [19, 20], "0461": [19, 20], "2764": 19, "3751": 19, "3619": 19, "5001": 19, "5110": 19, "6443": 19, "8221": 19, "4888": 19, "0444": 19, "5999": 19, "4370": 19, "7628": 19, "9332": 19, "6147": 19, "7332": 19, "3629": 19, "9184": 19, "7702": 19, "8887": 19, "8492": 19, "3410": 19, "1404": 19, "5817": 19, "4413": 19, "5550": 19, "6486": 19, "1070": 19, "6285": 19, "4948": 19, "2006": 19, "0535": 19, "4079": 19, "3811": 19, "6060": 19, "7666": 19, "8688": 19, "6863": 19, "5111": 19, "6425": 19, "3577": 19, "3431": 19, "6571": 19, "5622": 19, "7374": 19, "7520": 19, "2336": 19, "2847": 19, "8250": 19, "3014": 19, "2950": 19, "4040": 19, "4681": 19, "0705": 19, "2052": 19, "3334": 19, "6733": 19, "0834": 19, "4937": [19, 21], "0064": 19, "4104": 19, "3527": 19, "6449": 19, "5856": 19, "8357": 19, "0395": 19, "3422": 19, "8028": 19, "0855": 19, "7238": 19, "6317": 19, "4211": 19, "5988": 19, "2632": 19, "4014": 19, "7501": 19, "5659": 19, "0069": 19, "simul": [19, 21], "untrain": 19, "float_rnn": 19, "recov": 19, "atol": 19, "123456": 19, "prebuilt": 19, "signedbinaryweightpertensorconst": [19, 21], "binary_rnn": 19, "0946": 19, "0050": [19, 20], "1543": 19, "6322": 19, "1643": 19, "1693": 19, "2937": 19, "5227": [19, 20], "2290": 19, "3534": 19, "3883": 19, "4331": 19, "3634": 19, "1941": 19, "2240": 19, "0199": [19, 20], "3485": 19, "1145": 19, "4082": 19, "2987": 19, "0647": 19, "0498": 19, "1493": 19, "0299": 19, "0776": 19, "5670": 19, "4178": 19, "0239": 19, "4476": 19, "2029": 19, "0836": 19, "3521": 19, "7042": 19, "6326": 19, "4058": 19, "4118": 19, "0477": 19, "2387": 19, "0179": 19, "4416": 19, "4237": 19, "3282": 19, "1074": 19, "2626": 19, "3581": 19, "2328": [19, 20], "2268": 19, "2686": 19, "3103": 19, "4536": 19, "3461": 19, "3163": 19, "7639": 19, "5849": 19, "5252": 19, "1790": 19, "2984": 19, "5411": 19, "3147": 19, "6184": 19, "3037": 19, "1877": 19, "3755": 19, "1767": 19, "1491": 19, "1049": 19, "2871": 19, "0552": 19, "0883": 19, "0331": 19, "4749": 19, "7013": 19, "2264": 19, "0773": 19, "4583": 19, "0166": 19, "5743": 19, "1160": 19, "0442": 19, "1325": 19, "1657": 19, "0718": 19, "1215": 19, "6240": 19, "3092": 19, "0627": [19, 20], "1882": 19, "4642": 19, "1443": 19, "4705": 19, "3137": 19, "2447": 19, "0063": 19, "1129": 19, "3011": 19, "2572": 19, "2384": 19, "0376": 19, "1380": 19, "0251": 19, "6399": 19, "5771": 19, "7967": 19, "1631": 19, "4078": 19, "3199": 19, "0753": 19, "6524": [19, 21], "0690": 19, "1819": 19, "3889": 19, "3764": 19, "5458": 19, "1756": 19, "5704": 19, "1209": 19, "5173": 19, "4447": 19, "0048": [19, 20], "3481": 19, "5946": 19, "5221": 19, "1644": 19, "2949": 19, "1789": 19, "1982": 19, "2707": 19, "2900": 19, "5124": 19, "4399": 19, "0725": 19, "6091": 19, "0435": 19, "2030": [19, 20], "2659": 19, "1547": 19, "0580": 19, "4254": 19, "5559": 19, "1740": [19, 20], "4592": 19, "2369": 19, "4496": 19, "3336": 19, "3046": 19, "1354": 19, "3626": 19, "2079": 19, "4641": 19, "sigmoid_qu": 19, "tanh_quant": 19, "cell_state_qu": 19, "coupled_input_forget_g": 19, "cat_output_cell_st": 19, "shared_intra_layer_weight_qu": 19, "shared_intra_layer_gate_acc_qu": 19, "shared_cell_state_qu": 19, "_quantlstmlay": 19, "cifg": 19, "ourselv": [19, 20, 21], "concen": 19, "illeg": 19, "sigmoid": 19, "forget": 19, "forget_g": 19, "input_g": 19, "orthogon": 19, "wors": [19, 26], "calibration_mod": [19, 21], "nor": [19, 22], "correct": [19, 20, 21, 22, 26], "bias_correction_mod": [19, 21], "progress": [19, 26], "proof": 19, "concept": [19, 22, 23], "partial": [19, 22], "quantizelinear": 19, "dequantizelinear": 19, "qeight": 19, "quant_lstm_weight_onli": 19, "quant_lstm_weight_only_4b": 19, "8080": 19, "np": 19, "np_input": 19, "astyp": 19, "seq_len": 19, "pred_onnx": 19, "160701448": 19, "lstm_93": 19, "quant_lstm_weight_only_cifg": 19, "quant_lstm_weight_only_cifg_4b": 19, "687943522": 19, "lstm_87": 19, "quant_lstm_weight_only_bidirectional_2_lay": 19, "quant_lstm_weight_only_bidirectional_2_layers_shar": 19, "quant_lstm_weight_only_bidirectional_2_layers_shared_ih": 19, "8085": 19, "zp": 19, "quant_lstm_weight_only_bidirectional_2_layers_shared_q": 19, "side": [19, 23], "quant_lstm_weight_only_bidirectional_2_layers_shared_q_ih": 19, "8087": 19, "quantlstmcel": 19, "seri": [19, 22, 26], "export_qonnx": [19, 21], "quant_lstm": 19, "8088": 19, "quant_hidden_st": 19, "quant_cell_st": 19, "quant_weight_ii": 19, "quant_weight_if": 19, "quant_weight_": 19, "quant_weight_io": 19, "quant_weight_hi": 19, "quant_weight_hf": 19, "quant_weight_hc": 19, "quant_weight_ho": 19, "quant_bias_input": 19, "quant_bias_forget": 19, "quant_bias_cel": 19, "quant_bias_output": 19, "output_scal": 19, "output_zero_point": 19, "cell_state_scal": 19, "cell_state_zero_point": 19, "cell_state_bit_width": 19, "input_acc_scal": 19, "input_acc_zero_point": 19, "input_acc_bit_width": 19, "forget_acc_scal": 19, "forget_acc_zero_point": 19, "forget_acc_bit_width": 19, "cell_acc_scal": 19, "cell_acc_zero_point": 19, "cell_acc_bit_width": 19, "output_acc_scal": 19, "output_acc_zero_point": 19, "output_acc_bit_width": 19, "input_sigmoid_scal": 19, "input_sigmoid_zero_point": 19, "input_sigmoid_bit_width": 19, "forget_sigmoid_scal": 19, "forget_sigmoid_zero_point": 19, "forget_sigmoid_bit_width": 19, "cell_tanh_scal": 19, "cell_tanh_zero_point": 19, "cell_tanh_bit_width": 19, "output_sigmoid_scal": 19, "output_sigmoid_zero_point": 19, "output_sigmoid_bit_width": 19, "hidden_state_tanh_scal": 19, "hidden_state_tanh_zero_point": 19, "hidden_state_tanh_bit_width": 19, "quantweightbiasinputoutputlay": [20, 21], "quantwbiol": [20, 21, 22], "notic": [20, 21, 23], "stride": [20, 21], "pad": 20, "dilat": 20, "group": [20, 21, 26], "padding_mod": 20, "weightquanttyp": [20, 21], "biasquanttyp": [20, 21], "lambda": 20, "is_same_padded_strid": 20, "Its": 20, "intercept": [20, 21], "dedic": 20, "is_quant_en": [20, 21], "convolut": [20, 21], "2908": 20, "1793": 20, "9610": 20, "6542": 20, "3532": 20, "2730": 20, "0969": 20, "6030": 20, "4900": 20, "1607": 20, "3547": 20, "6696": 20, "0652": 20, "7300": 20, "0769": 20, "2424": 20, "1860": 20, "1182": 20, "7017": 20, "0963": 20, "2375": 20, "9439": 20, "convolutionbackward0": [20, 21], "unquant": [20, 21], "everywher": 20, "disabled_quant_conv": 20, "freedom": 20, "experi": [20, 21], "littl": 20, "formula": 20, "integer_valu": 20, "quant_conv": 20, "short": [20, 23], "0018": 20, "1273": 20, "1937": 20, "1734": 20, "0904": 20, "0055": 20, "1863": 20, "0203": 20, "0720": 20, "2251": 20, "1568": 20, "0978": 20, "0092": 20, "0941": 20, "1421": 20, "1033": 20, "0849": 20, "1956": 20, "0480": 20, "1771": 20, "0387": 20, "0258": 20, "2140": 20, "2196": 20, "1476": 20, "0590": 20, "0923": 20, "1531": 20, "1089": 20, "1642": 20, "2214": 20, "1384": 20, "1052": 20, "1144": 20, "0129": 20, "1199": 20, "0406": 20, "1697": 20, "1218": [20, 21], "1494": 20, "1513": 20, "2343": 20, "0314": 20, "int_weight": 20, "quant_weight_manu": 20, "popul": 20, "field": 20, "account": [20, 23], "rel": 20, "expens": 20, "sparingli": 20, "quant_act": 20, "out_tensor_0": 20, "out_tensor_1": 20, "0211": 20, "0162": 20, "evalu": [20, 21, 23], "1106": 20, "1945": 20, "4972": 20, "0968": 20, "7175": 20, "5901": 20, "0588": 20, "2014": 20, "1486": 20, "6435": 20, "9067": 20, "5212": 20, "2193": 20, "2352": 20, "8395": 20, "8351": 20, "6341": [20, 21], "5551": 20, "1040": 20, "8979": [20, 21], "7092": 20, "8232": 20, "0875": 20, "3954": 20, "4363": 20, "3973": 20, "3249": 20, "6914": 20, "3660": 20, "5057": 20, "8094": 20, "5100": 20, "6874": 20, "9981": 20, "2472": 20, "7813": 20, "0334": 20, "2880": 20, "9333": 20, "0180": 20, "4298": 20, "9978": 20, "5494": 20, "4548": 20, "6738": 20, "3177": 20, "3721": 20, "1650": 20, "1871": 20, "addbackward0": 20, "018651068210601807": 20, "consequ": 20, "longer": [20, 23], "__torch_function__": [20, 21], "handl": [20, 23], "quant_tensor": [20, 22], "5191": 20, "6402": 20, "1455": 20, "5883": 20, "0417": 20, "2631": 20, "3980": 20, "7959": 20, "8132": 20, "3496": 20, "maxpool2dwithindicesbackward0": 20, "0173": 20, "decai": [20, 21], "4770": 20, "2212": 20, "0691": 20, "5650": 20, "0346": 20, "6618": 20, "4635": 20, "3482": 20, "9730": 20, "7245": 20, "5881": 20, "5287": 20, "0863": [20, 21], "8857": 20, "4498": 20, "9669": 20, "6211": 20, "2376": 20, "6103": 20, "2700": 20, "6808": 20, "8519": 20, "5531": 20, "8264": 20, "3782": 20, "1881": 20, "9764": 20, "5993": 20, "5033": 20, "8031": 20, "1375": 20, "8740": 20, "6714": 20, "8611": 20, "tanhbackward0": [20, 21], "input_quant_conv": 20, "3568": 20, "1883": 20, "3589": 20, "4470": 20, "1039": 20, "3945": 20, "4190": 20, "3723": [20, 21], "8384": 20, "0510": 20, "5514": 20, "2751": 20, "5668": 20, "5824": 20, "2518": 20, "0418": 20, "2734": [20, 21], "7268": 20, "0249": 20, "1732": 20, "5197": 20, "1158": 20, "3771": 20, "3810": 20, "2008": 20, "1958e": 20, "mimpli": 20, "high": [20, 22], "reflect": [20, 21], "worst": 20, "int_valu": 20, "randint": 20, "quant_tensor_input": 20, "2000e": 20, "03": 20, "7000e": 20, "4000e": 20, "9000e": 20, "1000e": 20, "1300e": 20, "0000e": 20, "0100e": 20, "8000e": 20, "1900e": 20, "3000e": 20, "00": 20, "0900e": 20, "1400e": 20, "5000e": 20, "1800e": 20, "return_quant_conv": 20, "0019": 20, "0049": 20, "0012": 20, "0074": 20, "0023": [20, 21], "0035": 20, "0033": 20, "0031": 20, "0028": 20, "0116": 20, "0079": 20, "0046": [20, 21], "0022": 20, "0021": [20, 21], "0004": 20, "0011": 20, "0045": 20, "0002": 20, "0044": [20, 21], "0027": 20, "0025": 20, "0009": 20, "0040": 20, "8307e": 20, "07": 20, "0073": 20, "0078": [20, 21], "0005": 20, "0008": 20, "0016": 20, "0015": [20, 21], "0047": 20, "0014": 20, "0039": 20, "0036": 20, "0003": 20, "0026": 20, "7393e": 20, "2117": 20, "4811": 20, "0385": 20, "2502": 20, "2213": 20, "5773": 20, "0192": 20, "1347": 20, "8179": 20, "2316": 20, "6062": 20, "4426": 20, "3849": 20, "1251": 20, "0873": 20, "2406": 20, "4330": 20, "6447": 20, "0096": 20, "previous": [20, 21, 22], "got": 20, "obviou": [20, 22, 25], "had": [20, 22], "saw": [20, 21], "somehow": [20, 21], "predefin": [20, 21], "bias_quant_conv": 20, "194": 20, "193": 20, "forward_impl": [20, 21], "152": [20, 21], "compute_output_quant_tensor": [20, 21], "154": [20, 21], "155": [20, 21], "quant_bia": [20, 21, 22], "solv": [20, 21, 22], "4238e": 20, "6598e": 20, "1882e": 20, "5582e": 20, "9274e": 20, "9640e": 20, "6283e": 20, "7466e": 20, "8311e": 20, "9322e": 20, "1358e": 20, "2727e": 20, "8723e": 20, "7981e": 20, "0973e": 20, "1031e": 20, "5909e": 20, "2369e": 20, "1967e": 20, "0733e": 20, "6456e": 20, "8197e": 20, "1683e": 20, "8200e": 20, "2585e": 20, "1055e": 20, "9703e": 20, "7953e": 20, "input_bias_quant_conv": 20, "2816": [20, 21], "5271": 20, "1748": 20, "4247": 20, "1575": 20, "0681": 20, "6528": 20, "5346": 20, "0657": 20, "2993": 20, "3383": 20, "3035": 20, "4595": 20, "6796": 20, "9720": 20, "1948": 20, "5169": 20, "5586": 20, "0665": 20, "5807": 20, "5565": 20, "1780": 20, "0555": 20, "1080": 20, "0791": 20, "2262": 20, "2009e": 20, "0030": [20, 21], "0013": [20, 21], "0043": 20, "0061": 20, "0020": 20, "0053": [20, 21], "0037": 20, "7370e": 20, "output_bias_quant_conv": 20, "parameter_qu": 20, "190": 20, "No": [20, 23, 26], "cache_inference_quant_bia": 20, "156": 20, "157": 20, "364": 20, "biasquantproxyfrominjector": 20, "362": 20, "363": 20, "365": 20, "elif": [20, 26], "requires_input_scal": 20, "366": 20, "int8biaspertensorfloatinternalsc": 20, "bias_internal_scale_quant_conv": 20, "4360": 20, "2674": 20, "4194": 20, "2412": 20, "6360": 20, "6838": 20, "1445": 20, "3524": 20, "8025": 20, "2844": 20, "9945": 20, "4782": 20, "8064": 20, "5732": 20, "1249": 20, "3110": 20, "3223": 20, "2530": 20, "2753": 20, "5764": 20, "0181": 20, "4147": 20, "2049": 20, "9944": 20, "lead": [20, 23], "unquant_bias_input_quant_conv": 20, "6912": 20, "0086": 20, "1628": [20, 21], "4786": 20, "8073": 20, "5224": [20, 21], "4157": 20, "4686": 20, "2560": 20, "3170": 20, "5486": 20, "5216": 20, "1832": 20, "0217": 20, "3637": 20, "1115": 20, "6974": 20, "0452": 20, "6168": 20, "5241": 20, "6593": 20, "6408": 20, "4537": 20, "3744": 20, "7771": 20, "2848": 20, "0094e": 20, "339": 20, "3406": 20, "4597": 20, "1797": 20, "3452": 20, "3713": 20, "retur": 20, "bias_input_quant_conv": 20, "2327": 20, "9267": 20, "6294": 20, "0901": 20, "1027": 20, "0727": 20, "5614": 20, "6182": 20, "5394": 20, "4179": 20, "5184": 20, "2016": 20, "3925": 20, "6171": 20, "0814": 20, "6124": 20, "3779": 20, "9408": 20, "1334": 20, "6186": 20, "2167": 20, "5926": 20, "3690": 20, "0284": 20, "altough": [20, 22], "tree": 21, "master": 21, "in_featur": 21, "out_featur": 21, "quant_linear": 21, "3793": 21, "5820": 21, "5204": 21, "2723": 21, "1896": 21, "0140": 21, "5607": 21, "3803": 21, "2704": 21, "1879": 21, "0137": 21, "5591": 21, "004582525696605444": 21, "absolut": 21, "corrispond": 21, "83": 21, "41": 21, "float_input": 21, "float_output": 21, "5410": 21, "2934": 21, "1788": 21, "5684": 21, "0845": 21, "3986": 21, "9036": 21, "4586": 21, "3096": 21, "6472": 21, "2058": 21, "6525": 21, "8677": 21, "3873": 21, "2801": 21, "9009": 21, "9507": 21, "mmbackward0": 21, "made": [21, 23, 26], "pure": [21, 22], "int8weightpertensorfixedpoint": 21, "3828": 21, "5781": 21, "5234": 21, "1875": 21, "0156": 21, "5625": 21, "0078125": 21, "handi": 21, "known": [21, 22], "overal": 21, "quant_linear1": 21, "quant_linear1_scale_before_shar": 21, "quant_linear2": 21, "4f": 21, "9109": 21, "4609": 21, "3135": 21, "6523": 21, "2089": 21, "3752": 21, "8697": 21, "3893": 21, "9011": 21, "9521": 21, "friction": [21, 22], "0542e": 21, "5490": 21, "2894": 21, "5617": 21, "0894": 21, "3958": 21, "017021792009472847": 21, "quant_relu": 21, "5681": 21, "006043121684342623": 21, "signed_quant_output": 21, "unsigned_quant_output": 21, "5588": 21, "006074443459510803": 21, "999": 21, "percentil": [21, 23], "300": 21, "proper": 21, "int16bia": 21, "6541": 21, "1263": 21, "1680": 21, "1231": 21, "4658": 21, "2395": 21, "5207": 21, "3989": 21, "6461": 21, "8687": 21, "0466": 21, "4813": 21, "addmmbackward0": 21, "constraint": [21, 22], "operand": 21, "allign": 21, "easi": 21, "float_inp1": 21, "float_inp2": 21, "train_quant_inp1": 21, "train_quant_inp2": 21, "train_mode_add": 21, "ema": 21, "eval_quant_inp1": 21, "eval_quant_inp2": 21, "eval_mode_add": 21, "5335": 21, "2875": 21, "0447": 21, "5751": 21, "4057": 21, "015974320471286774": 21, "3994": 21, "8307": 21, "7188": 21, "5910": 21, "1757": 21, "9329": 21, "5431": 21, "7636": 21, "6773": 21, "2300": 21, "input_dequant_valu": 21, "input_integer_valu": 21, "output_integer_valu": 21, "max_pool1d": 21, "float_inp": 21, "1580": 21, "8504": 21, "6876": 21, "3076": 21, "1170": 21, "4704": 21, "4475": 21, "2714": 21, "8685": 21, "1086": 21, "9228": 21, "2666": 21, "0084": 21, "0543": 21, "6152": 21, "8323": 21, "3160": 21, "018094077706336975": 21, "squeezebackward1": 21, "8204": 21, "2480": 21, "6913": 21, "5964": 21, "2983": 21, "9714": 21, "4386": 21, "1614": 21, "8952": 21, "2649": 21, "7006": 21, "1438": 21, "1081": 21, "7272": 21, "8529": 21, "9646": 21, "0542": 21, "5478": 21, "3937": 21, "6817": 21, "9807": 21, "simiarli": 21, "train_mode_cat": 21, "eval_mode_cat": 21, "concat": 21, "easiest": 21, "underli": [21, 22, 23], "3880": 21, "5044": 21, "2716": 21, "1940": 21, "5432": 21, "03879871591925621": 21, "1816": 21, "0253": 21, "0388": 21, "0182": 21, "0374": 21, "5447": 21, "5446973443031311": 21, "uint8actpertensorfloatmaxinit": 21, "5294": 21, "5647": 21, "0235": 21, "static": 21, "depthwis": 21, "per_channel_depthwise_quant_conv": 21, "input_scaling_per_output_channel": 21, "input_scaling_stats_permute_dim": 21, "input_per_channel_broadcastable_shap": 21, "4033": 21, "8380": 21, "7193": 21, "8616": 21, "7012": 21, "4503": 21, "1285": 21, "1901": 21, "406": 21, "compact": 21, "usabl": [21, 26], "scalingperoutputtyp": [21, 26], "perchannel3bactqu": 21, "exactli": [21, 22, 26], "driven": 21, "drive": [21, 22], "weightquantsolv": [21, 22], "translat": [21, 22], "solver": 21, "actquantsolv": 21, "float_to_int_impl_typ": 21, "floattointimpltyp": 21, "scaling_stats_op": 21, "statsop": 21, "restrict_scaling_typ": 21, "restrictvaluetyp": 21, "overriden": 21, "prioriti": [21, 22], "tweak": 21, "domain": 21, "8b": 21, "int8weightperchannelfloat": 21, "learnedintweightperchannelfloat": 21, "log_fp": 21, "1887": 21, "0132": 21, "backpropag": 21, "loss": 21, "regular": 21, "push": 21, "smaller": [21, 22], "learnedintactpertensorfloat": 21, "4588": 21, "3119": 21, "6530": 21, "6493": 21, "3731": 21, "8706": 21, "9543": 21, "9068e": 21, "6866e": 21, "4251e": 21, "didn": 21, "float_linear": 21, "bit_width_offset": 21, "supress": 21, "accomod": 21, "basi": 21, "0017": 21, "question": [21, 23], "awai": [21, 22, 23], "underneath": 21, "immedi": 21, "deped": 21, "procedur": 21, "restrict_v": 21, "modular": 21, "degre": 21, "overhead": 21, "scatter": 21, "favour": [21, 22], "composit": [21, 22], "auto": [21, 22], "wire": [21, 22], "clear": [21, 22], "extendedinjector": [21, 22, 26], "int8actpertensorfloatfromscratch": 21, "dequant_valu": 21, "convini": 21, "engin": 21, "\u00e8xtendedinjector": 21, "repeat": 21, "recurs": 21, "manner": 21, "indipend": 21, "fine": 21, "grain": 21, "int8actpertensorfloatparameterfromscratch": 21, "quant_identity_bit_width": 21, "quant_linear_bit_width": 21, "perfect": 21, "flavour": [21, 22], "indipedent": 21, "37": 21, "protobuf": 21, "38": 21, "dialect": 21, "quant_conv_4b8b": 21, "output_path": 21, "brevitas_onnx_conv4b8b": 21, "input_t": 21, "40": [21, 23], "quant_conv_4b_weight": 21, "brevitas_onnx_conv_4b_weight": 21, "42": 21, "tvm": [21, 25], "incorpor": 21, "programmat": [21, 26], "pattern": [21, 23], "subsystem": 21, "transform": 21, "beyond": 21, "scope": [21, 22], "worth": 21, "embrac": 21, "backport": 21, "tracer": 21, "value_trac": 21, "trace": 21, "caveat": [21, 23], "temporar": 21, "quant_model": 21, "calibrate_model": 21, "calibration_load": 21, "no_grad": [21, 23], "imag": 21, "_": 21, "enumer": 21, "iter": 21, "fast_hadamard_transform": 21, "csrc": 22, "date": 22, "fallback": 22, "long": [22, 23], "old": 22, "scripe": 22, "inherit": 22, "describ": 22, "memori": 22, "pipelin": [22, 23], "intrins": 22, "challang": 22, "redund": 22, "highli": [22, 23, 26], "invers": 22, "machineri": 22, "heart": 22, "ever": 22, "fixtur": 22, "pytest": 22, "chosen": 22, "lend": 22, "themselv": 22, "hold": [22, 26], "fixed_point": 22, "v2": 22, "plai": 22, "navig": 22, "confus": 22, "lack": 22, "perspect": [22, 23], "machin": 22, "relationship": 22, "individu": 22, "task": 22, "meant": 22, "blueprint": [22, 26], "implment": 22, "deal": 22, "residu": 22, "topologi": 22, "connect": 22, "priori": 22, "reconcil": 22, "inher": [22, 23], "rigid": 22, "branch": 22, "weightquantproxi": 22, "affine_stat": 22, "track": 22, "responsibil": 22, "quantoutputmixin": 22, "_quantwbiol_": 22, "quantweightmixin": 22, "quantbiasmixin": 22, "suppos": 22, "ux": 22, "real": 22, "life": 22, "exploratori": 22, "analysi": 22, "accuraci": [22, 23, 26], "truncavgpool2d": 22, "receiv": 22, "todo": 22, "endless": 23, "infrastructur": 23, "smooth": 23, "transit": 23, "relat": 23, "replic": 23, "mimic": 23, "wide": 23, "difficult": 23, "computation": 23, "unless": 23, "decid": 23, "reli": 23, "fast": 23, "price": 23, "pai": 23, "deploi": 23, "great": 23, "speed": 23, "fly": 23, "greatli": 23, "excess": 23, "failur": 23, "altogeth": 23, "good": 23, "compromis": 23, "eas": 23, "pro": 23, "con": 23, "newli": 23, "finish": 23, "exchang": 23, "slightli": 23, "enter": 23, "namedtupl": 23, "outstand": 23, "grant": 23, "On": 23, "caus": 23, "fail": 23, "extrem": 23, "benefici": 23, "myquantmodel": 23, "hyper": 23, "param": 23, "example_input": 23, "ti": 23, "surfac": 23, "area": 23, "manag": 23, "third": [23, 26], "increas": 23, "m": 23, "hasattr": 23, "compile_qu": 23, "nb": 23, "statu": [23, 26], "reset": 23, "especi": [23, 26], "wikitext2": 23, "evid": 23, "bigger": 23, "shot": 23, "500": 23, "sampl": 23, "measur": 23, "25m": 23, "26m": 23, "1h14m": 23, "1h15m": 23, "2h10m": 23, "1m": 23, "aris": 23, "comprehens": 23, "_dynamo": 23, "kth": 23, "suggest": [23, 26], "investig": 23, "regress": [], "segment": [], "fault": [], "seek": 23, "clarif": 23, "help": [23, 26], "due": 23, "me": 23, "cache_size_limit": 23, "accumulated_cache_size_limit": 23, "ye": 23, "codebas": 23, "fairli": 23, "ramp": 23, "bug": 23, "balanc": 23, "refactor": 23, "studi": 23, "love": 23, "suit": 23, "welcom": 23, "pyxir": [], "compliant": 25, "necessar": 25, "architectur": 28, "scale_dequantized_shap": [1, 26], "gguf": [25, 28], "llm": 25, "ggml": 26, "establish": 26, "focus": 26, "ptq": 26, "q8_0": 26, "q4_0": 26, "q4_1": 26, "q4_k": 26, "brevitas_ptq_llm": 26, "huggingfac": 26, "command": 26, "asym": 26, "sym": 26, "per_group": 26, "produc": 26, "gptq": 26, "awq": 26, "quarot": 26, "spinquant": 26, "onlin": 26, "hadamard": 26, "rotat": 26, "magr": 26, "customiz": 26, "superblock": 26, "_k": 26, "shapemixin": 26, "scaling_per_output_typ": 26, "scaling_per_output_channel_shap": 26, "quantscalingint": 26, "rescaling_int_qu": 26, "upstream_shap": 26, "quantzpint": 26, "quantscalequantzpint8weightpertensorfloat": 26, "shifteduint8weightpertensorfloat": 26, "groupwiseweightquantproxyfrominjector": 26, "scaling_qu": 26, "zp_quant": 26, "_scaleshiftquantzeropoint": 26, "zp_int_quant": 26, "zero_point_dequantized_shap": 26, "intuit": 26, "quantscalequantzeropointint8weightpertensorfloat": 26, "baselin": 26, "construct": 26, "anatomi": 26, "select": 26, "quantzeropointint": 26, "attach": 26, "left": 26, "layer_map": 26, "layerwise_quant": 26, "compute_layer_map": 26, "weight_scaling_impl_typ": 26, "gguf_export": 26, "save_quantized_as_gguf": 26, "q4_k_": 26, "token": 26, "solid": 26, "q3_k": 26, "readabl": 26, "propos": 26, "speak": 26, "happi": 26}, "objects": {"brevitas": [[1, 0, 0, "-", "core"]], "brevitas.core": [[2, 0, 0, "-", "bit_width"], [3, 0, 0, "-", "function_wrapper"], [4, 0, 0, "-", "quant"], [1, 0, 0, "-", "restrict_val"], [5, 0, 0, "-", "scaling"], [6, 0, 0, "-", "stats"], [1, 0, 0, "-", "utils"], [1, 0, 0, "-", "zero_point"]], "brevitas.core.bit_width": [[2, 0, 0, "-", "const"], [2, 0, 0, "-", "parameter"]], "brevitas.core.bit_width.const": [[2, 1, 1, "", "BitWidthConst"], [2, 1, 1, "", "BitWidthStatefulConst"], [2, 1, 1, "", "MsbClampBitWidth"]], "brevitas.core.bit_width.const.BitWidthConst": [[2, 2, 1, "", "forward"]], "brevitas.core.bit_width.const.BitWidthStatefulConst": [[2, 2, 1, "", "forward"]], "brevitas.core.bit_width.const.MsbClampBitWidth": [[2, 2, 1, "", "forward"]], "brevitas.core.bit_width.parameter": [[2, 1, 1, "", "BitWidthParameter"], [2, 1, 1, "", "RemoveBitwidthParameter"]], "brevitas.core.bit_width.parameter.BitWidthParameter": [[2, 2, 1, "", "forward"]], "brevitas.core.bit_width.parameter.RemoveBitwidthParameter": [[2, 2, 1, "", "forward"]], "brevitas.core.function_wrapper": [[3, 0, 0, "-", "clamp"], [3, 0, 0, "-", "misc"], [3, 0, 0, "-", "ops_ste"], [3, 0, 0, "-", "shape"]], "brevitas.core.function_wrapper.clamp": [[3, 1, 1, "", "ClampMin"], [3, 1, 1, "", "FloatClamp"], [3, 1, 1, "", "ScalarClamp"], [3, 1, 1, "", "TensorClamp"]], "brevitas.core.function_wrapper.clamp.ClampMin": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.clamp.FloatClamp": [[3, 2, 1, "", "forward"], [3, 2, 1, "", "inf_nan_clamp"], [3, 2, 1, "", "saturating_clamp"]], "brevitas.core.function_wrapper.clamp.ScalarClamp": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.clamp.TensorClamp": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.misc": [[3, 1, 1, "", "Identity"], [3, 1, 1, "", "InplaceLogTwo"], [3, 1, 1, "", "LogTwo"], [3, 1, 1, "", "PowerOfTwo"]], "brevitas.core.function_wrapper.misc.Identity": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.misc.InplaceLogTwo": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.misc.LogTwo": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.misc.PowerOfTwo": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.ops_ste": [[3, 1, 1, "", "CeilSte"], [3, 1, 1, "", "DPURoundSte"], [3, 1, 1, "", "FloorSte"], [3, 1, 1, "", "InplaceTensorClampSte"], [3, 1, 1, "", "RoundSte"], [3, 1, 1, "", "RoundToZeroSte"], [3, 1, 1, "", "ScalarClampMinSte"], [3, 1, 1, "", "TensorClampSte"]], "brevitas.core.function_wrapper.ops_ste.CeilSte": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.ops_ste.DPURoundSte": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.ops_ste.FloorSte": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.ops_ste.InplaceTensorClampSte": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.ops_ste.RoundSte": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.ops_ste.RoundToZeroSte": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.ops_ste.ScalarClampMinSte": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.ops_ste.TensorClampSte": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.shape": [[3, 1, 1, "", "DynamicOverSubChannelBlockView"], [3, 1, 1, "", "OverBatchOverOutputChannelView"], [3, 1, 1, "", "OverBatchOverTensorView"], [3, 1, 1, "", "OverOutputChannelView"], [3, 1, 1, "", "OverOutputFeaturesView"], [3, 1, 1, "", "OverSubChannelBlockView"], [3, 1, 1, "", "OverTensorView"], [3, 1, 1, "", "PermuteDims"], [3, 1, 1, "", "StatsInputViewShapeImpl"]], "brevitas.core.function_wrapper.shape.DynamicOverSubChannelBlockView": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.shape.OverBatchOverOutputChannelView": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.shape.OverBatchOverTensorView": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.shape.OverOutputChannelView": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.shape.OverOutputFeaturesView": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.shape.OverSubChannelBlockView": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.shape.OverTensorView": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.shape.PermuteDims": [[3, 2, 1, "", "forward"]], "brevitas.core.function_wrapper.shape.StatsInputViewShapeImpl": [[3, 3, 1, "", "DYNAMIC_OVER_SUBCHANNEL_BLOCK"], [3, 3, 1, "", "OVER_BATCH_OVER_OUTPUT_CHANNELS"], [3, 3, 1, "", "OVER_BATCH_OVER_TENSOR"], [3, 3, 1, "", "OVER_OUTPUT_CHANNELS"], [3, 3, 1, "", "OVER_OUTPUT_FEATURES"], [3, 3, 1, "", "OVER_SUBCHANNEL_BLOCK"], [3, 3, 1, "", "OVER_TENSOR"]], "brevitas.core.quant": [[4, 0, 0, "-", "binary"], [4, 0, 0, "-", "delay"], [4, 0, 0, "-", "int"], [4, 0, 0, "-", "int_base"], [4, 0, 0, "-", "ternary"]], "brevitas.core.quant.binary": [[4, 1, 1, "", "BinaryQuant"], [4, 1, 1, "", "ClampedBinaryQuant"]], "brevitas.core.quant.binary.BinaryQuant": [[4, 2, 1, "", "forward"]], "brevitas.core.quant.binary.ClampedBinaryQuant": [[4, 2, 1, "", "forward"]], "brevitas.core.quant.delay": [[4, 1, 1, "", "DelayWrapper"]], "brevitas.core.quant.delay.DelayWrapper": [[4, 2, 1, "", "forward"]], "brevitas.core.quant.int": [[4, 1, 1, "", "DecoupledRescalingIntQuant"], [4, 1, 1, "", "DecoupledRescalingIntQuantWithInput"], [4, 1, 1, "", "PrescaledRestrictIntQuant"], [4, 1, 1, "", "PrescaledRestrictIntQuantWithInputBitWidth"], [4, 1, 1, "", "RescalingIntQuant"], [4, 1, 1, "", "TruncIntQuant"]], "brevitas.core.quant.int.DecoupledRescalingIntQuant": [[4, 2, 1, "", "forward"]], "brevitas.core.quant.int.DecoupledRescalingIntQuantWithInput": [[4, 2, 1, "", "forward"]], "brevitas.core.quant.int.PrescaledRestrictIntQuant": [[4, 2, 1, "", "forward"]], "brevitas.core.quant.int.PrescaledRestrictIntQuantWithInputBitWidth": [[4, 2, 1, "", "forward"]], "brevitas.core.quant.int.RescalingIntQuant": [[4, 2, 1, "", "forward"]], "brevitas.core.quant.int.TruncIntQuant": [[4, 2, 1, "", "forward"], [4, 2, 1, "", "max_int"], [4, 2, 1, "", "min_int"]], "brevitas.core.quant.int_base": [[4, 1, 1, "", "DecoupledIntQuant"], [4, 1, 1, "", "IntQuant"]], "brevitas.core.quant.int_base.DecoupledIntQuant": [[4, 2, 1, "", "forward"], [4, 2, 1, "", "max_int"], [4, 2, 1, "", "min_int"], [4, 2, 1, "", "to_int"]], "brevitas.core.quant.int_base.IntQuant": [[4, 2, 1, "", "forward"], [4, 2, 1, "", "max_int"], [4, 2, 1, "", "min_int"], [4, 2, 1, "", "to_int"]], "brevitas.core.quant.ternary": [[4, 1, 1, "", "TernaryQuant"]], "brevitas.core.quant.ternary.TernaryQuant": [[4, 2, 1, "", "forward"]], "brevitas.core.restrict_val": [[1, 1, 1, "", "FloatRestrictValue"], [1, 1, 1, "", "IntRestrictValue"], [1, 1, 1, "", "LogFloatRestrictValue"], [1, 1, 1, "", "PowerOfTwoRestrictValue"], [1, 1, 1, "", "QuantRestrictValue"]], "brevitas.core.restrict_val.FloatRestrictValue": [[1, 2, 1, "", "forward"], [1, 2, 1, "", "restrict_init_float"], [1, 2, 1, "", "restrict_init_inplace_module"], [1, 2, 1, "", "restrict_init_module"], [1, 2, 1, "", "restrict_init_tensor"]], "brevitas.core.restrict_val.IntRestrictValue": [[1, 2, 1, "", "forward"], [1, 2, 1, "", "restrict_init_float"], [1, 2, 1, "", "restrict_init_inplace_module"], [1, 2, 1, "", "restrict_init_module"], [1, 2, 1, "", "restrict_init_tensor"]], "brevitas.core.restrict_val.LogFloatRestrictValue": [[1, 2, 1, "", "forward"], [1, 2, 1, "", "restrict_init_float"], [1, 2, 1, "", "restrict_init_inplace_module"], [1, 2, 1, "", "restrict_init_module"], [1, 2, 1, "", "restrict_init_tensor"]], "brevitas.core.restrict_val.PowerOfTwoRestrictValue": [[1, 2, 1, "", "forward"], [1, 2, 1, "", "restrict_init_float"], [1, 2, 1, "", "restrict_init_inplace_module"], [1, 2, 1, "", "restrict_init_module"], [1, 2, 1, "", "restrict_init_tensor"]], "brevitas.core.restrict_val.QuantRestrictValue": [[1, 2, 1, "", "forward"], [1, 2, 1, "", "restrict_init_float"], [1, 2, 1, "", "restrict_init_inplace_module"], [1, 2, 1, "", "restrict_init_module"], [1, 2, 1, "", "restrict_init_tensor"], [1, 2, 1, "", "retrocompatibility_op"]], "brevitas.core.scaling": [[5, 0, 0, "-", "int_scaling"], [5, 0, 0, "-", "runtime"], [5, 0, 0, "-", "standalone"]], "brevitas.core.scaling.int_scaling": [[5, 1, 1, "", "IntScaling"], [5, 1, 1, "", "PowerOfTwoIntScaling"]], "brevitas.core.scaling.int_scaling.IntScaling": [[5, 2, 1, "", "forward"]], "brevitas.core.scaling.int_scaling.PowerOfTwoIntScaling": [[5, 2, 1, "", "forward"]], "brevitas.core.scaling.runtime": [[5, 1, 1, "", "RuntimeDynamicGroupStatsScaling"], [5, 1, 1, "", "RuntimeStatsScaling"], [5, 1, 1, "", "StatsFromParameterScaling"]], "brevitas.core.scaling.runtime.RuntimeDynamicGroupStatsScaling": [[5, 2, 1, "", "forward"]], "brevitas.core.scaling.runtime.RuntimeStatsScaling": [[5, 2, 1, "", "forward"]], "brevitas.core.scaling.runtime.StatsFromParameterScaling": [[5, 2, 1, "", "forward"]], "brevitas.core.scaling.standalone": [[5, 1, 1, "", "ConstScaling"], [5, 1, 1, "", "ParameterFromRuntimeStatsScaling"], [5, 1, 1, "", "ParameterFromStatsFromParameterScaling"], [5, 1, 1, "", "ParameterScaling"], [5, 1, 1, "", "TruncMsbScaling"], [5, 1, 1, "", "TruncScalingWrapper"]], "brevitas.core.scaling.standalone.ConstScaling": [[5, 2, 1, "", "forward"]], "brevitas.core.scaling.standalone.ParameterFromRuntimeStatsScaling": [[5, 2, 1, "", "forward"], [5, 2, 1, "", "init_scale"], [5, 2, 1, "", "state_dict"], [5, 2, 1, "", "training_forward"]], "brevitas.core.scaling.standalone.ParameterFromStatsFromParameterScaling": [[5, 2, 1, "", "forward"], [5, 2, 1, "", "state_dict"]], "brevitas.core.scaling.standalone.ParameterScaling": [[5, 2, 1, "", "forward"]], "brevitas.core.scaling.standalone.TruncMsbScaling": [[5, 2, 1, "", "forward"]], "brevitas.core.scaling.standalone.TruncScalingWrapper": [[5, 2, 1, "", "forward"]], "brevitas.core.stats": [[6, 0, 0, "-", "stats_op"], [6, 0, 0, "-", "stats_wrapper"], [6, 0, 0, "-", "view_wrapper"]], "brevitas.core.stats.stats_op": [[6, 1, 1, "", "AbsAve"], [6, 1, 1, "", "AbsMax"], [6, 1, 1, "", "AbsMaxAve"], [6, 1, 1, "", "AbsMaxL2"], [6, 1, 1, "", "AbsMinMax"], [6, 1, 1, "", "AbsPercentile"], [6, 1, 1, "", "HalfQuadraticOptimizerScale"], [6, 1, 1, "", "HalfQuadraticOptimizerZeroPoint"], [6, 1, 1, "", "KLMinimizerThreshold"], [6, 1, 1, "", "L1Norm"], [6, 1, 1, "", "L2Norm"], [6, 1, 1, "", "MSE"], [6, 1, 1, "", "MeanLearnedSigmaStd"], [6, 1, 1, "", "MeanSigmaStd"], [6, 1, 1, "", "NegativeMinOrZero"], [6, 1, 1, "", "NegativePercentileOrZero"], [6, 1, 1, "", "PercentileInterval"], [6, 4, 1, "", "masked_median"], [6, 4, 1, "", "shrink_lp_op"]], "brevitas.core.stats.stats_op.AbsAve": [[6, 2, 1, "", "forward"]], "brevitas.core.stats.stats_op.AbsMax": [[6, 2, 1, "", "forward"]], "brevitas.core.stats.stats_op.AbsMaxAve": [[6, 2, 1, "", "forward"]], "brevitas.core.stats.stats_op.AbsMaxL2": [[6, 2, 1, "", "forward"]], "brevitas.core.stats.stats_op.AbsMinMax": [[6, 2, 1, "", "forward"]], "brevitas.core.stats.stats_op.AbsPercentile": [[6, 2, 1, "", "forward"]], "brevitas.core.stats.stats_op.HalfQuadraticOptimizerScale": [[6, 2, 1, "", "forward"], [6, 2, 1, "", "optimize"], [6, 2, 1, "", "parameter_search"]], "brevitas.core.stats.stats_op.HalfQuadraticOptimizerZeroPoint": [[6, 2, 1, "", "forward"], [6, 2, 1, "", "optimize"], [6, 2, 1, "", "parameter_search"]], "brevitas.core.stats.stats_op.KLMinimizerThreshold": [[6, 2, 1, "", "forward"], [6, 2, 1, "", "smooth_normalize_distribution"]], "brevitas.core.stats.stats_op.L1Norm": [[6, 2, 1, "", "forward"]], "brevitas.core.stats.stats_op.L2Norm": [[6, 2, 1, "", "forward"]], "brevitas.core.stats.stats_op.MSE": [[6, 2, 1, "", "evaluate_loss"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "mse_fib_search"], [6, 2, 1, "", "mse_grid_search"], [6, 2, 1, "", "mse_loss_fn"], [6, 2, 1, "", "mse_search"]], "brevitas.core.stats.stats_op.MeanLearnedSigmaStd": [[6, 2, 1, "", "forward"]], "brevitas.core.stats.stats_op.MeanSigmaStd": [[6, 2, 1, "", "forward"]], "brevitas.core.stats.stats_op.NegativeMinOrZero": [[6, 2, 1, "", "forward"]], "brevitas.core.stats.stats_op.NegativePercentileOrZero": [[6, 2, 1, "", "forward"]], "brevitas.core.stats.stats_op.PercentileInterval": [[6, 2, 1, "", "forward"]], "brevitas.core.utils": [[1, 1, 1, "", "ParameterWrapper"], [1, 1, 1, "", "SingleArgStatelessBuffer"], [1, 1, 1, "", "SliceTensor"], [1, 1, 1, "", "StatelessBuffer"], [1, 4, 1, "", "inplace_momentum_update"], [1, 4, 1, "", "inplace_tensor_add"], [1, 4, 1, "", "inplace_tensor_mul"]], "brevitas.core.utils.ParameterWrapper": [[1, 2, 1, "", "forward"]], "brevitas.core.utils.SingleArgStatelessBuffer": [[1, 2, 1, "", "forward"]], "brevitas.core.utils.SliceTensor": [[1, 2, 1, "", "eager_forward"], [1, 2, 1, "", "forward"]], "brevitas.core.utils.StatelessBuffer": [[1, 2, 1, "", "forward"], [1, 2, 1, "", "state_dict"]], "brevitas.core.zero_point": [[1, 1, 1, "", "ParameterFromRuntimeZeroPoint"], [1, 1, 1, "", "ParameterFromStatsFromParameterZeroPoint"], [1, 1, 1, "", "ParameterZeroPoint"], [1, 1, 1, "", "PreZeroCenterZeroPoint"], [1, 1, 1, "", "StatsFromParameterZeroPoint"], [1, 1, 1, "", "ZeroZeroPoint"]], "brevitas.core.zero_point.ParameterFromRuntimeZeroPoint": [[1, 2, 1, "", "forward"], [1, 2, 1, "", "init_zp"], [1, 2, 1, "", "state_dict"], [1, 2, 1, "", "training_forward"]], "brevitas.core.zero_point.ParameterFromStatsFromParameterZeroPoint": [[1, 2, 1, "", "forward"], [1, 2, 1, "", "state_dict"]], "brevitas.core.zero_point.ParameterZeroPoint": [[1, 2, 1, "", "forward"]], "brevitas.core.zero_point.PreZeroCenterZeroPoint": [[1, 2, 1, "", "forward"], [1, 2, 1, "", "get_zero_center"]], "brevitas.core.zero_point.StatsFromParameterZeroPoint": [[1, 2, 1, "", "forward"]], "brevitas.core.zero_point.ZeroZeroPoint": [[1, 2, 1, "", "forward"]], "brevitas.function": [[7, 0, 0, "-", "ops"], [7, 0, 0, "-", "ops_ste"], [7, 0, 0, "-", "shape"]], "brevitas.function.ops": [[7, 4, 1, "", "binary_sign"], [7, 4, 1, "", "compute_max_mantissa"], [7, 4, 1, "", "dpu_round"], [7, 4, 1, "", "get_upper_bound_on_l1_norm"], [7, 4, 1, "", "identity"], [7, 4, 1, "", "max_float"], [7, 4, 1, "", "max_int"], [7, 4, 1, "", "min_int"], [7, 4, 1, "", "round_to_zero"], [7, 4, 1, "", "tensor_clamp"], [7, 4, 1, "", "tensor_clamp_"]], "brevitas.function.ops_ste": [[7, 4, 1, "", "abs_binary_sign_grad"], [7, 4, 1, "", "binary_sign_ste"], [7, 4, 1, "", "ceil_ste"], [7, 4, 1, "", "dpu_round_ste"], [7, 4, 1, "", "floor_ste"], [7, 4, 1, "", "round_ste"], [7, 4, 1, "", "round_to_zero_ste"], [7, 4, 1, "", "scalar_clamp_min_ste"], [7, 4, 1, "", "scalar_clamp_ste"], [7, 4, 1, "", "tensor_clamp_ste"], [7, 4, 1, "", "tensor_clamp_ste_"], [7, 4, 1, "", "ternary_sign_ste"]], "brevitas.function.shape": [[7, 4, 1, "", "over_batch_over_output_channels"], [7, 4, 1, "", "over_batch_over_tensor"], [7, 4, 1, "", "over_output_channels"], [7, 4, 1, "", "over_output_features"], [7, 4, 1, "", "over_tensor"]], "brevitas.ops": [[8, 0, 0, "-", "autograd_ste_ops"]], "brevitas.ops.autograd_ste_ops": [[8, 1, 1, "", "AbsBinarySignGradFn"], [8, 1, 1, "", "BinarySignSteFn"], [8, 1, 1, "", "CeilSteFn"], [8, 1, 1, "", "DPURoundSteFn"], [8, 1, 1, "", "FloorSteFn"], [8, 1, 1, "", "InplaceTensorClampSteFn"], [8, 1, 1, "", "RoundSteFn"], [8, 1, 1, "", "RoundToZeroSteFn"], [8, 1, 1, "", "ScalarClampMinSteFn"], [8, 1, 1, "", "ScalarClampSteFn"], [8, 1, 1, "", "TensorClampSteFn"], [8, 1, 1, "", "TernarySignSteFn"], [8, 4, 1, "", "abs_binary_sign_grad_impl"], [8, 4, 1, "", "binary_sign_ste_impl"], [8, 4, 1, "", "ceil_ste_impl"], [8, 4, 1, "", "dpu_round_ste_impl"], [8, 4, 1, "", "floor_ste_impl"], [8, 4, 1, "", "round_ste_impl"], [8, 4, 1, "", "round_to_zero_ste_impl"], [8, 4, 1, "", "scalar_clamp_min_ste_impl"], [8, 4, 1, "", "scalar_clamp_ste_impl"], [8, 4, 1, "", "tensor_clamp_ste_impl"], [8, 4, 1, "", "ternary_sign_ste_impl"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"about": 0, "author": 0, "cite": 0, "brevita": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 21, 23], "core": [1, 2, 3, 4, 5, 6, 22], "packag": [1, 2, 3, 4, 5, 6, 7, 8], "subpackag": [1, 9], "submodul": [1, 2, 3, 4, 5, 6, 7, 8], "restrict_v": 1, "modul": [1, 2, 3, 4, 5, 6, 7, 8], "util": 1, "zero_point": [1, 26], "content": [1, 2, 3, 4, 5, 6], "bit_width": 2, "const": 2, "paramet": 2, "function_wrapp": 3, "clamp": 3, "misc": 3, "ops_st": [3, 7], "shape": [3, 7, 22], "quant": [4, 22], "binari": [4, 15, 21], "delai": 4, "int": 4, "int_bas": 4, "ternari": 4, "scale": [5, 21, 26], "int_scal": 5, "runtim": [5, 17], "standalon": 5, "stat": 6, "stats_op": 6, "stats_wrapp": 6, "view_wrapp": 6, "function": [7, 21, 22], "op": [7, 8], "autograd_ste_op": 8, "api": [9, 15], "refer": 9, "f": 10, "A": [10, 15], "q": 10, "get": 11, "start": 11, "ptq": [11, 23], "over": 11, "hand": 11, "programmat": 11, "defin": [11, 21], "quantiz": [11, 15, 17, 18, 19, 20, 21, 22, 23, 26], "model": [11, 17, 23], "nn": 11, "layer": [11, 15, 21, 22], "weight": [11, 15, 19, 21], "onli": [11, 19], "float": [11, 21], "activ": [11, 15, 18, 21], "bias": 11, "export": [11, 17, 19, 21, 22, 25, 26], "onnx": [11, 17, 21], "where": 11, "go": 11, "from": [11, 14, 21], "here": 11, "set": 13, "setup": 14, "requir": [14, 17], "instal": 14, "pypi": 14, "github": 14, "option": 14, "train": [14, 21], "infer": 14, "anatomi": 15, "what": 15, "": 15, "auto": 15, "wire": 15, "depend": [15, 21], "inject": [15, 21], "practic": 15, "exampl": [15, 17], "manual": 15, "an": [15, 18, 20], "extendedinjector": 15, "inherit": [15, 21], "composit": 15, "interfac": 15, "pass": 15, "custom": [15, 21], "quantident": [15, 21], "initi": 15, "statist": 15, "share": [15, 21], "proxi": [15, 22], "instanc": 15, "deal": 15, "build": 15, "tutori": [16, 21], "introduct": 17, "quantizelinear": 17, "clip": 17, "dequantizelinear": 17, "qcdq": 17, "basic": 17, "complet": 17, "The": 17, "c": 17, "bitwidth": 17, "8": 17, "qop": 17, "qgemm": 17, "v": 17, "gemm": 17, "dynam": 17, "overview": [18, 20], "rnn": 19, "lstm": 19, "quantrnn": 19, "quantlstm": 19, "just": 19, "time": 19, "compil": [19, 23], "calibr": [19, 21], "full": [19, 23], "quanttensor": [20, 21, 22], "quantconv2d": 20, "input": [20, 21], "output": [20, 21], "bia": [20, 21], "tvmcon": 21, "2021": 21, "fundament": 21, "quantlinear": 21, "default": 21, "mix": 21, "point": 21, "fix": 21, "quantrelu": 21, "requant": 21, "tensor": 21, "how": 21, "i": 21, "determin": 21, "oper": 21, "element": 21, "wise": 21, "arithmet": 21, "add": 21, "call": 21, "torch": 21, "max_pool": 21, "tanh": 21, "concaten": 21, "common": 21, "keyword": 21, "argument": 21, "bit": 21, "width": 21, "per": [21, 23], "channel": 21, "max_val": 21, "init": 21, "scratch": 21, "enum": [21, 22], "learn": 21, "retrain": 21, "among": 21, "fx": [21, 22], "base": 21, "post": 21, "architectur": 22, "scriptmodul": 22, "injector": 22, "solver": 22, "mixin": 22, "graph": 22, "trace": 22, "transform": 22, "loss": 22, "flexibl": 23, "fake": 23, "your": 23, "network": 23, "quant_inference_mod": 23, "some": 23, "result": 23, "sana": 23, "1": 23, "6b": 23, "group": 23, "fp8": 23, "llama": 23, "3": 23, "2": 23, "1b": 23, "known": 23, "gotcha": 23, "faq": [23, 26], "compat": 25, "user": 28, "guid": 28, "gguf": 26, "llm": 26, "entrypoint": 26, "direct": 26}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"About": [[0, "about"]], "Author": [[0, "author"]], "Cite as": [[0, "cite-as"]], "brevitas.core package": [[1, "brevitas-core-package"]], "Subpackages": [[1, "subpackages"], [9, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"]], "brevitas.core.restrict_val module": [[1, "module-brevitas.core.restrict_val"]], "brevitas.core.utils module": [[1, "module-brevitas.core.utils"]], "brevitas.core.zero_point module": [[1, "module-brevitas.core.zero_point"]], "Module contents": [[1, "module-brevitas.core"], [2, "module-brevitas.core.bit_width"], [3, "module-brevitas.core.function_wrapper"], [4, "module-brevitas.core.quant"], [5, "module-brevitas.core.scaling"], [6, "module-brevitas.core.stats"]], "brevitas.core.bit_width package": [[2, "brevitas-core-bit-width-package"]], "brevitas.core.bit_width.const module": [[2, "module-brevitas.core.bit_width.const"]], "brevitas.core.bit_width.parameter module": [[2, "module-brevitas.core.bit_width.parameter"]], "brevitas.core.function_wrapper package": [[3, "brevitas-core-function-wrapper-package"]], "brevitas.core.function_wrapper.clamp module": [[3, "module-brevitas.core.function_wrapper.clamp"]], "brevitas.core.function_wrapper.misc module": [[3, "module-brevitas.core.function_wrapper.misc"]], "brevitas.core.function_wrapper.ops_ste module": [[3, "module-brevitas.core.function_wrapper.ops_ste"]], "brevitas.core.function_wrapper.shape module": [[3, "module-brevitas.core.function_wrapper.shape"]], "brevitas.core.quant package": [[4, "brevitas-core-quant-package"]], "brevitas.core.quant.binary module": [[4, "module-brevitas.core.quant.binary"]], "brevitas.core.quant.delay module": [[4, "module-brevitas.core.quant.delay"]], "brevitas.core.quant.int module": [[4, "module-brevitas.core.quant.int"]], "brevitas.core.quant.int_base module": [[4, "module-brevitas.core.quant.int_base"]], "brevitas.core.quant.ternary module": [[4, "module-brevitas.core.quant.ternary"]], "brevitas.core.scaling package": [[5, "brevitas-core-scaling-package"]], "brevitas.core.scaling.int_scaling module": [[5, "module-brevitas.core.scaling.int_scaling"]], "brevitas.core.scaling.runtime module": [[5, "module-brevitas.core.scaling.runtime"]], "brevitas.core.scaling.standalone module": [[5, "module-brevitas.core.scaling.standalone"]], "brevitas.core.stats package": [[6, "brevitas-core-stats-package"]], "brevitas.core.stats.stats_op module": [[6, "module-brevitas.core.stats.stats_op"]], "brevitas.core.stats.stats_wrapper module": [[6, "module-brevitas.core.stats.stats_wrapper"]], "brevitas.core.stats.view_wrapper module": [[6, "module-brevitas.core.stats.view_wrapper"]], "brevitas.function package": [[7, "brevitas-function-package"]], "brevitas.function.ops module": [[7, "module-brevitas.function.ops"]], "brevitas.function.ops_ste module": [[7, "module-brevitas.function.ops_ste"]], "brevitas.function.shape module": [[7, "module-brevitas.function.shape"]], "brevitas.ops package": [[8, "brevitas-ops-package"]], "brevitas.ops.autograd_ste_ops module": [[8, "module-brevitas.ops.autograd_ste_ops"]], "API reference": [[9, "api-reference"]], "F.A.Q.": [[10, "f-a-q"]], "Getting started": [[11, "getting-started"]], "PTQ over hand or programmatically defined quantized models": [[11, "ptq-over-hand-or-programmatically-defined-quantized-models"]], "Defining a quantized model with brevitas.nn layers": [[11, "defining-a-quantized-model-with-brevitas-nn-layers"]], "Weights-only quantization, float activations and biases": [[11, "weights-only-quantization-float-activations-and-biases"]], "Weights and activations quantization, float biases": [[11, "weights-and-activations-quantization-float-biases"]], "Weights, activations, biases quantization": [[11, "weights-activations-biases-quantization"]], "Export to ONNX": [[11, "export-to-onnx"]], "Where to go from here": [[11, "where-to-go-from-here"]], "Brevitas": [[12, "brevitas"]], "Settings": [[13, "settings"]], "Setup": [[14, "setup"]], "Requirements": [[14, "requirements"], [17, "Requirements"]], "Installation Requirements": [[14, "installation-requirements"]], "Installation": [[14, "installation"]], "Installing from PyPI": [[14, "installing-from-pypi"]], "Installing from Github": [[14, "installing-from-github"]], "Optional Training Requirements": [[14, "optional-training-requirements"]], "Optional Inference Requirements": [[14, "optional-inference-requirements"]], "Anatomy of a Quantizer": [[15, "Anatomy-of-a-Quantizer"]], "What\u2019s in a Quantizer?": [[15, "What's-in-a-Quantizer?"]], "Quantization with auto-wiring Dependency Injection": [[15, "Quantization-with-auto-wiring-Dependency-Injection"]], "A Practical Example: Binary Quantization": [[15, "A-Practical-Example:-Binary-Quantization"]], "Manual Binary Quantization": [[15, "Manual-Binary-Quantization"]], "Binary Quantization with an ExtendedInjector": [[15, "Binary-Quantization-with-an-ExtendedInjector"]], "Inheritance and Composition of Quantizers": [[15, "Inheritance-and-Composition-of-Quantizers"]], "Interfacing a Quantizer with a Quantized Layer": [[15, "Interfacing-a-Quantizer-with-a-Quantized-Layer"]], "Passing a custom quantizer to QuantIdentity": [[15, "Passing-a-custom-quantizer-to-QuantIdentity"]], "A Custom Quantizer initialized with Weight Statistics": [[15, "A-Custom-Quantizer-initialized-with-Weight-Statistics"]], "Sharing a Quantizer": [[15, "Sharing-a-Quantizer"]], "Sharing a proxy": [[15, "Sharing-a-proxy"]], "Sharing an instance of Activation Quantization": [[15, "Sharing-an-instance-of-Activation-Quantization"]], "Dealing with Weight Initialization": [[15, "Dealing-with-Weight-Initialization"]], "Building a Custom Quantization API": [[15, "Building-a-Custom-Quantization-API"]], "Tutorials": [[16, "tutorials"]], "Tutorials:": [[16, null]], "ONNX Export": [[17, "ONNX-Export"]], "Introduction": [[17, "Introduction"]], "QuantizeLinear-Clip-DeQuantizeLinear (QCDQ)": [[17, "QuantizeLinear-Clip-DeQuantizeLinear-(QCDQ)"]], "Basic Example": [[17, "Basic-Example"]], "Complete Model": [[17, "Complete-Model"]], "The C in QCDQ (Bitwidth <= 8)": [[17, "The-C-in-QCDQ-(Bitwidth-<=-8)"]], "Clipping in QOps": [[17, "Clipping-in-QOps"]], "ONNX Runtime": [[17, "ONNX-Runtime"]], "QCDQ": [[17, "QCDQ"]], "QGEMM vs GEMM": [[17, "QGEMM-vs-GEMM"]], "Export Dynamically Quantized Models to ONNX": [[17, "Export-Dynamically-Quantized-Models-to-ONNX"]], "An Overview of Quantized Activations": [[18, "An-Overview-of-Quantized-Activations"]], "Quantized RNNs and LSTMs": [[19, "Quantized-RNNs-and-LSTMs"]], "QuantRNN": [[19, "QuantRNN"]], "QuantLSTM": [[19, "QuantLSTM"]], "Just-in-time compilation": [[19, "Just-in-time-compilation"]], "Calibration": [[19, "Calibration"]], "Export": [[19, "Export"], [21, "Export"], [22, "export"]], "QuantLSTM weight-only quantization export": [[19, "QuantLSTM-weight-only-quantization-export"]], "QuantLSTM full quantization export": [[19, "QuantLSTM-full-quantization-export"]], "An overview of QuantTensor and QuantConv2d": [[20, "An-overview-of-QuantTensor-and-QuantConv2d"]], "QuantTensor": [[20, "QuantTensor"], [22, "quanttensor"]], "Input Quantization": [[20, "Input-Quantization"]], "Output Quantization": [[20, "Output-Quantization"]], "Bias Quantization": [[20, "Bias-Quantization"], [21, "Bias-Quantization"]], "Brevitas TVMCon 2021 tutorial": [[21, "Brevitas-TVMCon-2021-tutorial"]], "Fundamentals": [[21, "Fundamentals"]], "QuantLinear layer": [[21, "QuantLinear-layer"]], "Weight quantization": [[21, "Weight-quantization"]], "Default weight quantization": [[21, "Default-weight-quantization"]], "Mixing quantized weights and floating-point inputs": [[21, "Mixing-quantized-weights-and-floating-point-inputs"]], "Fixed-point weight quantization": [[21, "Fixed-point-weight-quantization"]], "Binary weight quantization": [[21, "Binary-weight-quantization"]], "Sharing a weight quantizer": [[21, "Sharing-a-weight-quantizer"]], "Inputs/Outputs/Activations quantization:": [[21, "Inputs/Outputs/Activations-quantization:"]], "QuantIdentity layer": [[21, "QuantIdentity-layer"]], "QuantReLU layer": [[21, "QuantReLU-layer"]], "Requantizing a tensor": [[21, "Requantizing-a-tensor"]], "How is the activation scale determined by default?": [[21, "How-is-the-activation-scale-determined-by-default?"]], "Operations on QuantTensor": [[21, "Operations-on-QuantTensor"]], "Element-wise Arithmetic": [[21, "Element-wise-Arithmetic"]], "Element-wise adds": [[21, "Element-wise-adds"]], "Calling torch functions": [[21, "Calling-torch-functions"]], "max_pool on QuantTensor": [[21, "max_pool-on-QuantTensor"]], "tanh on QuantTensor": [[21, "tanh-on-QuantTensor"]], "QuantTensor concatenation": [[21, "QuantTensor-concatenation"]], "Customizing Quantizers": [[21, "Customizing-Quantizers"]], "Common keyword arguments": [[21, "Common-keyword-arguments"]], "Weight bit-width": [[21, "Weight-bit-width"]], "Per-channel weight quantization": [[21, "Per-channel-weight-quantization"]], "Activation bit-width": [[21, "Activation-bit-width"]], "Activation quantization with max_val init": [[21, "Activation-quantization-with-max_val-init"]], "Per-channel activation quantization": [[21, "Per-channel-activation-quantization"]], "Inheriting from a quantizer": [[21, "Inheriting-from-a-quantizer"]], "Defining a quantizer from scratch with enums": [[21, "Defining-a-quantizer-from-scratch-with-enums"]], "Weight quantizer": [[21, "Weight-quantizer"]], "Activation quantizer": [[21, "Activation-quantizer"]], "Learned scale and bit-width quantizer": [[21, "Learned-scale-and-bit-width-quantizer"]], "Retraining from floating-point": [[21, "Retraining-from-floating-point"]], "Defining a quantizer from scratch with dependency-injection": [[21, "Defining-a-quantizer-from-scratch-with-dependency-injection"]], "Activation quantization from scratch": [[21, "Activation-quantization-from-scratch"]], "Weight quantization with learned scale from scratch": [[21, "Weight-quantization-with-learned-scale-from-scratch"]], "Sharing learned bit-width among layers": [[21, "Sharing-learned-bit-width-among-layers"]], "Export to custom Quantized ONNX": [[21, "Export-to-custom-Quantized-ONNX"]], "Brevitas and FX": [[21, "Brevitas-and-FX"]], "Calibration-based post-training quantization": [[21, "Calibration-based-post-training-quantization"]], "Architecture": [[22, "architecture"]], "Functions": [[22, "functions"]], "Core ScriptModules": [[22, "core-scriptmodules"]], "Injectors and Quantizers": [[22, "injectors-and-quantizers"]], "Enums, Shapes and Solvers": [[22, "enums-shapes-and-solvers"]], "Proxies": [[22, "proxies"]], "Quant Layers and Mixins": [[22, "quant-layers-and-mixins"]], "FX graph tracing and transformations": [[22, "fx-graph-tracing-and-transformations"]], "Losses": [[22, "losses"]], "Brevitas and Compile": [[23, "brevitas-and-compile"]], "Flexibility and Fake quantization": [[23, "flexibility-and-fake-quantization"]], "Compile your quantized network": [[23, "compile-your-quantized-network"]], "Full model compile + quant_inference_mode": [[23, "full-model-compile-quant-inference-mode"]], "Quantizers compile + quant_inference_mode": [[23, "quantizers-compile-quant-inference-mode"], [23, "id1"]], "Quantizers compile + PTQ": [[23, "quantizers-compile-ptq"]], "Some results": [[23, "some-results"]], "Sana 1.6B, with per-group fp8 quantization": [[23, "id2"]], "Llama 3.2 1B, with per-group fp8 quantization": [[23, "id3"]], "Known Gotchas": [[23, "known-gotchas"]], "FAQ": [[23, "faq"], [26, "faq"]], "Export Compatibility": [[25, "export-compatibility"]], "GGUF Export": [[26, "gguf-export"]], "LLM Entrypoint": [[26, "llm-entrypoint"]], "Direct export and quantized scales/zero_points": [[26, "direct-export-and-quantized-scales-zero-points"]], "User Guides": [[28, "user-guides"]]}, "indexentries": {"floatrestrictvalue (class in brevitas.core.restrict_val)": [[1, "brevitas.core.restrict_val.FloatRestrictValue"]], "intrestrictvalue (class in brevitas.core.restrict_val)": [[1, "brevitas.core.restrict_val.IntRestrictValue"]], "logfloatrestrictvalue (class in brevitas.core.restrict_val)": [[1, "brevitas.core.restrict_val.LogFloatRestrictValue"]], "parameterfromruntimezeropoint (class in brevitas.core.zero_point)": [[1, "brevitas.core.zero_point.ParameterFromRuntimeZeroPoint"]], "parameterfromstatsfromparameterzeropoint (class in brevitas.core.zero_point)": [[1, "brevitas.core.zero_point.ParameterFromStatsFromParameterZeroPoint"]], "parameterwrapper (class in brevitas.core.utils)": [[1, "brevitas.core.utils.ParameterWrapper"]], "parameterzeropoint (class in brevitas.core.zero_point)": [[1, "brevitas.core.zero_point.ParameterZeroPoint"]], "poweroftworestrictvalue (class in brevitas.core.restrict_val)": [[1, "brevitas.core.restrict_val.PowerOfTwoRestrictValue"]], "prezerocenterzeropoint (class in brevitas.core.zero_point)": [[1, "brevitas.core.zero_point.PreZeroCenterZeroPoint"]], "quantrestrictvalue (class in brevitas.core.restrict_val)": [[1, "brevitas.core.restrict_val.QuantRestrictValue"]], "singleargstatelessbuffer (class in brevitas.core.utils)": [[1, "brevitas.core.utils.SingleArgStatelessBuffer"]], "slicetensor (class in brevitas.core.utils)": [[1, "brevitas.core.utils.SliceTensor"]], "statelessbuffer (class in brevitas.core.utils)": [[1, "brevitas.core.utils.StatelessBuffer"]], "statsfromparameterzeropoint (class in brevitas.core.zero_point)": [[1, "brevitas.core.zero_point.StatsFromParameterZeroPoint"]], "zerozeropoint (class in brevitas.core.zero_point)": [[1, "brevitas.core.zero_point.ZeroZeroPoint"]], "brevitas.core": [[1, "module-brevitas.core"]], "brevitas.core.restrict_val": [[1, "module-brevitas.core.restrict_val"]], "brevitas.core.utils": [[1, "module-brevitas.core.utils"]], "brevitas.core.zero_point": [[1, "module-brevitas.core.zero_point"]], "eager_forward() (brevitas.core.utils.slicetensor method)": [[1, "brevitas.core.utils.SliceTensor.eager_forward"]], "forward() (brevitas.core.restrict_val.floatrestrictvalue method)": [[1, "brevitas.core.restrict_val.FloatRestrictValue.forward"]], "forward() (brevitas.core.restrict_val.intrestrictvalue method)": [[1, "brevitas.core.restrict_val.IntRestrictValue.forward"]], "forward() (brevitas.core.restrict_val.logfloatrestrictvalue method)": [[1, "brevitas.core.restrict_val.LogFloatRestrictValue.forward"]], "forward() (brevitas.core.restrict_val.poweroftworestrictvalue method)": [[1, "brevitas.core.restrict_val.PowerOfTwoRestrictValue.forward"]], "forward() (brevitas.core.restrict_val.quantrestrictvalue method)": [[1, "brevitas.core.restrict_val.QuantRestrictValue.forward"]], "forward() (brevitas.core.utils.parameterwrapper method)": [[1, "brevitas.core.utils.ParameterWrapper.forward"]], "forward() (brevitas.core.utils.singleargstatelessbuffer method)": [[1, "brevitas.core.utils.SingleArgStatelessBuffer.forward"]], "forward() (brevitas.core.utils.slicetensor method)": [[1, "brevitas.core.utils.SliceTensor.forward"]], "forward() (brevitas.core.utils.statelessbuffer method)": [[1, "brevitas.core.utils.StatelessBuffer.forward"]], "forward() (brevitas.core.zero_point.parameterfromruntimezeropoint method)": [[1, "brevitas.core.zero_point.ParameterFromRuntimeZeroPoint.forward"]], "forward() (brevitas.core.zero_point.parameterfromstatsfromparameterzeropoint method)": [[1, "brevitas.core.zero_point.ParameterFromStatsFromParameterZeroPoint.forward"]], "forward() (brevitas.core.zero_point.parameterzeropoint method)": [[1, "brevitas.core.zero_point.ParameterZeroPoint.forward"]], "forward() (brevitas.core.zero_point.prezerocenterzeropoint method)": [[1, "brevitas.core.zero_point.PreZeroCenterZeroPoint.forward"]], "forward() (brevitas.core.zero_point.statsfromparameterzeropoint method)": [[1, "brevitas.core.zero_point.StatsFromParameterZeroPoint.forward"]], "forward() (brevitas.core.zero_point.zerozeropoint method)": [[1, "brevitas.core.zero_point.ZeroZeroPoint.forward"]], "get_zero_center() (brevitas.core.zero_point.prezerocenterzeropoint method)": [[1, "brevitas.core.zero_point.PreZeroCenterZeroPoint.get_zero_center"]], "init_zp() (brevitas.core.zero_point.parameterfromruntimezeropoint method)": [[1, "brevitas.core.zero_point.ParameterFromRuntimeZeroPoint.init_zp"]], "inplace_momentum_update() (in module brevitas.core.utils)": [[1, "brevitas.core.utils.inplace_momentum_update"]], "inplace_tensor_add() (in module brevitas.core.utils)": [[1, "brevitas.core.utils.inplace_tensor_add"]], "inplace_tensor_mul() (in module brevitas.core.utils)": [[1, "brevitas.core.utils.inplace_tensor_mul"]], "module": [[1, "module-brevitas.core"], [1, "module-brevitas.core.restrict_val"], [1, "module-brevitas.core.utils"], [1, "module-brevitas.core.zero_point"], [2, "module-brevitas.core.bit_width"], [2, "module-brevitas.core.bit_width.const"], [2, "module-brevitas.core.bit_width.parameter"], [3, "module-brevitas.core.function_wrapper"], [3, "module-brevitas.core.function_wrapper.clamp"], [3, "module-brevitas.core.function_wrapper.misc"], [3, "module-brevitas.core.function_wrapper.ops_ste"], [3, "module-brevitas.core.function_wrapper.shape"], [4, "module-brevitas.core.quant"], [4, "module-brevitas.core.quant.binary"], [4, "module-brevitas.core.quant.delay"], [4, "module-brevitas.core.quant.int"], [4, "module-brevitas.core.quant.int_base"], [4, "module-brevitas.core.quant.ternary"], [5, "module-brevitas.core.scaling"], [5, "module-brevitas.core.scaling.int_scaling"], [5, "module-brevitas.core.scaling.runtime"], [5, "module-brevitas.core.scaling.standalone"], [6, "module-brevitas.core.stats"], [6, "module-brevitas.core.stats.stats_op"], [6, "module-brevitas.core.stats.stats_wrapper"], [6, "module-brevitas.core.stats.view_wrapper"], [7, "module-brevitas.function.ops"], [7, "module-brevitas.function.ops_ste"], [7, "module-brevitas.function.shape"], [8, "module-brevitas.ops.autograd_ste_ops"]], "restrict_init_float() (brevitas.core.restrict_val.floatrestrictvalue method)": [[1, "brevitas.core.restrict_val.FloatRestrictValue.restrict_init_float"]], "restrict_init_float() (brevitas.core.restrict_val.intrestrictvalue method)": [[1, "brevitas.core.restrict_val.IntRestrictValue.restrict_init_float"]], "restrict_init_float() (brevitas.core.restrict_val.logfloatrestrictvalue method)": [[1, "brevitas.core.restrict_val.LogFloatRestrictValue.restrict_init_float"]], "restrict_init_float() (brevitas.core.restrict_val.poweroftworestrictvalue method)": [[1, "brevitas.core.restrict_val.PowerOfTwoRestrictValue.restrict_init_float"]], "restrict_init_float() (brevitas.core.restrict_val.quantrestrictvalue method)": [[1, "brevitas.core.restrict_val.QuantRestrictValue.restrict_init_float"]], "restrict_init_inplace_module() (brevitas.core.restrict_val.floatrestrictvalue method)": [[1, "brevitas.core.restrict_val.FloatRestrictValue.restrict_init_inplace_module"]], "restrict_init_inplace_module() (brevitas.core.restrict_val.intrestrictvalue method)": [[1, "brevitas.core.restrict_val.IntRestrictValue.restrict_init_inplace_module"]], "restrict_init_inplace_module() (brevitas.core.restrict_val.logfloatrestrictvalue method)": [[1, "brevitas.core.restrict_val.LogFloatRestrictValue.restrict_init_inplace_module"]], "restrict_init_inplace_module() (brevitas.core.restrict_val.poweroftworestrictvalue method)": [[1, "brevitas.core.restrict_val.PowerOfTwoRestrictValue.restrict_init_inplace_module"]], "restrict_init_inplace_module() (brevitas.core.restrict_val.quantrestrictvalue method)": [[1, "brevitas.core.restrict_val.QuantRestrictValue.restrict_init_inplace_module"]], "restrict_init_module() (brevitas.core.restrict_val.floatrestrictvalue method)": [[1, "brevitas.core.restrict_val.FloatRestrictValue.restrict_init_module"]], "restrict_init_module() (brevitas.core.restrict_val.intrestrictvalue method)": [[1, "brevitas.core.restrict_val.IntRestrictValue.restrict_init_module"]], "restrict_init_module() (brevitas.core.restrict_val.logfloatrestrictvalue method)": [[1, "brevitas.core.restrict_val.LogFloatRestrictValue.restrict_init_module"]], "restrict_init_module() (brevitas.core.restrict_val.poweroftworestrictvalue method)": [[1, "brevitas.core.restrict_val.PowerOfTwoRestrictValue.restrict_init_module"]], "restrict_init_module() (brevitas.core.restrict_val.quantrestrictvalue method)": [[1, "brevitas.core.restrict_val.QuantRestrictValue.restrict_init_module"]], "restrict_init_tensor() (brevitas.core.restrict_val.floatrestrictvalue method)": [[1, "brevitas.core.restrict_val.FloatRestrictValue.restrict_init_tensor"]], "restrict_init_tensor() (brevitas.core.restrict_val.intrestrictvalue method)": [[1, "brevitas.core.restrict_val.IntRestrictValue.restrict_init_tensor"]], "restrict_init_tensor() (brevitas.core.restrict_val.logfloatrestrictvalue method)": [[1, "brevitas.core.restrict_val.LogFloatRestrictValue.restrict_init_tensor"]], "restrict_init_tensor() (brevitas.core.restrict_val.poweroftworestrictvalue method)": [[1, "brevitas.core.restrict_val.PowerOfTwoRestrictValue.restrict_init_tensor"]], "restrict_init_tensor() (brevitas.core.restrict_val.quantrestrictvalue method)": [[1, "brevitas.core.restrict_val.QuantRestrictValue.restrict_init_tensor"]], "retrocompatibility_op() (brevitas.core.restrict_val.quantrestrictvalue method)": [[1, "brevitas.core.restrict_val.QuantRestrictValue.retrocompatibility_op"]], "state_dict() (brevitas.core.utils.statelessbuffer method)": [[1, "brevitas.core.utils.StatelessBuffer.state_dict"]], "state_dict() (brevitas.core.zero_point.parameterfromruntimezeropoint method)": [[1, "brevitas.core.zero_point.ParameterFromRuntimeZeroPoint.state_dict"]], "state_dict() (brevitas.core.zero_point.parameterfromstatsfromparameterzeropoint method)": [[1, "brevitas.core.zero_point.ParameterFromStatsFromParameterZeroPoint.state_dict"]], "training_forward() (brevitas.core.zero_point.parameterfromruntimezeropoint method)": [[1, "brevitas.core.zero_point.ParameterFromRuntimeZeroPoint.training_forward"]], "bitwidthconst (class in brevitas.core.bit_width.const)": [[2, "brevitas.core.bit_width.const.BitWidthConst"]], "bitwidthparameter (class in brevitas.core.bit_width.parameter)": [[2, "brevitas.core.bit_width.parameter.BitWidthParameter"]], "bitwidthstatefulconst (class in brevitas.core.bit_width.const)": [[2, "brevitas.core.bit_width.const.BitWidthStatefulConst"]], "msbclampbitwidth (class in brevitas.core.bit_width.const)": [[2, "brevitas.core.bit_width.const.MsbClampBitWidth"]], "removebitwidthparameter (class in brevitas.core.bit_width.parameter)": [[2, "brevitas.core.bit_width.parameter.RemoveBitwidthParameter"]], "brevitas.core.bit_width": [[2, "module-brevitas.core.bit_width"]], "brevitas.core.bit_width.const": [[2, "module-brevitas.core.bit_width.const"]], "brevitas.core.bit_width.parameter": [[2, "module-brevitas.core.bit_width.parameter"]], "forward() (brevitas.core.bit_width.const.bitwidthconst method)": [[2, "brevitas.core.bit_width.const.BitWidthConst.forward"]], "forward() (brevitas.core.bit_width.const.bitwidthstatefulconst method)": [[2, "brevitas.core.bit_width.const.BitWidthStatefulConst.forward"]], "forward() (brevitas.core.bit_width.const.msbclampbitwidth method)": [[2, "brevitas.core.bit_width.const.MsbClampBitWidth.forward"]], "forward() (brevitas.core.bit_width.parameter.bitwidthparameter method)": [[2, "brevitas.core.bit_width.parameter.BitWidthParameter.forward"]], "forward() (brevitas.core.bit_width.parameter.removebitwidthparameter method)": [[2, "brevitas.core.bit_width.parameter.RemoveBitwidthParameter.forward"]], "ceilste (class in brevitas.core.function_wrapper.ops_ste)": [[3, "brevitas.core.function_wrapper.ops_ste.CeilSte"]], "clampmin (class in brevitas.core.function_wrapper.clamp)": [[3, "brevitas.core.function_wrapper.clamp.ClampMin"]], "dpuroundste (class in brevitas.core.function_wrapper.ops_ste)": [[3, "brevitas.core.function_wrapper.ops_ste.DPURoundSte"]], "dynamic_over_subchannel_block (brevitas.core.function_wrapper.shape.statsinputviewshapeimpl attribute)": [[3, "brevitas.core.function_wrapper.shape.StatsInputViewShapeImpl.DYNAMIC_OVER_SUBCHANNEL_BLOCK"]], "dynamicoversubchannelblockview (class in brevitas.core.function_wrapper.shape)": [[3, "brevitas.core.function_wrapper.shape.DynamicOverSubChannelBlockView"]], "floatclamp (class in brevitas.core.function_wrapper.clamp)": [[3, "brevitas.core.function_wrapper.clamp.FloatClamp"]], "floorste (class in brevitas.core.function_wrapper.ops_ste)": [[3, "brevitas.core.function_wrapper.ops_ste.FloorSte"]], "identity (class in brevitas.core.function_wrapper.misc)": [[3, "brevitas.core.function_wrapper.misc.Identity"]], "inplacelogtwo (class in brevitas.core.function_wrapper.misc)": [[3, "brevitas.core.function_wrapper.misc.InplaceLogTwo"]], "inplacetensorclampste (class in brevitas.core.function_wrapper.ops_ste)": [[3, "brevitas.core.function_wrapper.ops_ste.InplaceTensorClampSte"]], "logtwo (class in brevitas.core.function_wrapper.misc)": [[3, "brevitas.core.function_wrapper.misc.LogTwo"]], "over_batch_over_output_channels (brevitas.core.function_wrapper.shape.statsinputviewshapeimpl attribute)": [[3, "brevitas.core.function_wrapper.shape.StatsInputViewShapeImpl.OVER_BATCH_OVER_OUTPUT_CHANNELS"]], "over_batch_over_tensor (brevitas.core.function_wrapper.shape.statsinputviewshapeimpl attribute)": [[3, "brevitas.core.function_wrapper.shape.StatsInputViewShapeImpl.OVER_BATCH_OVER_TENSOR"]], "over_output_channels (brevitas.core.function_wrapper.shape.statsinputviewshapeimpl attribute)": [[3, "brevitas.core.function_wrapper.shape.StatsInputViewShapeImpl.OVER_OUTPUT_CHANNELS"]], "over_output_features (brevitas.core.function_wrapper.shape.statsinputviewshapeimpl attribute)": [[3, "brevitas.core.function_wrapper.shape.StatsInputViewShapeImpl.OVER_OUTPUT_FEATURES"]], "over_subchannel_block (brevitas.core.function_wrapper.shape.statsinputviewshapeimpl attribute)": [[3, "brevitas.core.function_wrapper.shape.StatsInputViewShapeImpl.OVER_SUBCHANNEL_BLOCK"]], "over_tensor (brevitas.core.function_wrapper.shape.statsinputviewshapeimpl attribute)": [[3, "brevitas.core.function_wrapper.shape.StatsInputViewShapeImpl.OVER_TENSOR"]], "overbatchoveroutputchannelview (class in brevitas.core.function_wrapper.shape)": [[3, "brevitas.core.function_wrapper.shape.OverBatchOverOutputChannelView"]], "overbatchovertensorview (class in brevitas.core.function_wrapper.shape)": [[3, "brevitas.core.function_wrapper.shape.OverBatchOverTensorView"]], "overoutputchannelview (class in brevitas.core.function_wrapper.shape)": [[3, "brevitas.core.function_wrapper.shape.OverOutputChannelView"]], "overoutputfeaturesview (class in brevitas.core.function_wrapper.shape)": [[3, "brevitas.core.function_wrapper.shape.OverOutputFeaturesView"]], "oversubchannelblockview (class in brevitas.core.function_wrapper.shape)": [[3, "brevitas.core.function_wrapper.shape.OverSubChannelBlockView"]], "overtensorview (class in brevitas.core.function_wrapper.shape)": [[3, "brevitas.core.function_wrapper.shape.OverTensorView"]], "permutedims (class in brevitas.core.function_wrapper.shape)": [[3, "brevitas.core.function_wrapper.shape.PermuteDims"]], "poweroftwo (class in brevitas.core.function_wrapper.misc)": [[3, "brevitas.core.function_wrapper.misc.PowerOfTwo"]], "roundste (class in brevitas.core.function_wrapper.ops_ste)": [[3, "brevitas.core.function_wrapper.ops_ste.RoundSte"]], "roundtozeroste (class in brevitas.core.function_wrapper.ops_ste)": [[3, "brevitas.core.function_wrapper.ops_ste.RoundToZeroSte"]], "scalarclamp (class in brevitas.core.function_wrapper.clamp)": [[3, "brevitas.core.function_wrapper.clamp.ScalarClamp"]], "scalarclampminste (class in brevitas.core.function_wrapper.ops_ste)": [[3, "brevitas.core.function_wrapper.ops_ste.ScalarClampMinSte"]], "statsinputviewshapeimpl (class in brevitas.core.function_wrapper.shape)": [[3, "brevitas.core.function_wrapper.shape.StatsInputViewShapeImpl"]], "tensorclamp (class in brevitas.core.function_wrapper.clamp)": [[3, "brevitas.core.function_wrapper.clamp.TensorClamp"]], "tensorclampste (class in brevitas.core.function_wrapper.ops_ste)": [[3, "brevitas.core.function_wrapper.ops_ste.TensorClampSte"]], "brevitas.core.function_wrapper": [[3, "module-brevitas.core.function_wrapper"]], "brevitas.core.function_wrapper.clamp": [[3, "module-brevitas.core.function_wrapper.clamp"]], "brevitas.core.function_wrapper.misc": [[3, "module-brevitas.core.function_wrapper.misc"]], "brevitas.core.function_wrapper.ops_ste": [[3, "module-brevitas.core.function_wrapper.ops_ste"]], "brevitas.core.function_wrapper.shape": [[3, "module-brevitas.core.function_wrapper.shape"]], "forward() (brevitas.core.function_wrapper.clamp.clampmin method)": [[3, "brevitas.core.function_wrapper.clamp.ClampMin.forward"]], "forward() (brevitas.core.function_wrapper.clamp.floatclamp method)": [[3, "brevitas.core.function_wrapper.clamp.FloatClamp.forward"]], "forward() (brevitas.core.function_wrapper.clamp.scalarclamp method)": [[3, "brevitas.core.function_wrapper.clamp.ScalarClamp.forward"]], "forward() (brevitas.core.function_wrapper.clamp.tensorclamp method)": [[3, "brevitas.core.function_wrapper.clamp.TensorClamp.forward"]], "forward() (brevitas.core.function_wrapper.misc.identity method)": [[3, "brevitas.core.function_wrapper.misc.Identity.forward"]], "forward() (brevitas.core.function_wrapper.misc.inplacelogtwo method)": [[3, "brevitas.core.function_wrapper.misc.InplaceLogTwo.forward"]], "forward() (brevitas.core.function_wrapper.misc.logtwo method)": [[3, "brevitas.core.function_wrapper.misc.LogTwo.forward"]], "forward() (brevitas.core.function_wrapper.misc.poweroftwo method)": [[3, "brevitas.core.function_wrapper.misc.PowerOfTwo.forward"]], "forward() (brevitas.core.function_wrapper.ops_ste.ceilste method)": [[3, "brevitas.core.function_wrapper.ops_ste.CeilSte.forward"]], "forward() (brevitas.core.function_wrapper.ops_ste.dpuroundste method)": [[3, "brevitas.core.function_wrapper.ops_ste.DPURoundSte.forward"]], "forward() (brevitas.core.function_wrapper.ops_ste.floorste method)": [[3, "brevitas.core.function_wrapper.ops_ste.FloorSte.forward"]], "forward() (brevitas.core.function_wrapper.ops_ste.inplacetensorclampste method)": [[3, "brevitas.core.function_wrapper.ops_ste.InplaceTensorClampSte.forward"]], "forward() (brevitas.core.function_wrapper.ops_ste.roundste method)": [[3, "brevitas.core.function_wrapper.ops_ste.RoundSte.forward"]], "forward() (brevitas.core.function_wrapper.ops_ste.roundtozeroste method)": [[3, "brevitas.core.function_wrapper.ops_ste.RoundToZeroSte.forward"]], "forward() (brevitas.core.function_wrapper.ops_ste.scalarclampminste method)": [[3, "brevitas.core.function_wrapper.ops_ste.ScalarClampMinSte.forward"]], "forward() (brevitas.core.function_wrapper.ops_ste.tensorclampste method)": [[3, "brevitas.core.function_wrapper.ops_ste.TensorClampSte.forward"]], "forward() (brevitas.core.function_wrapper.shape.dynamicoversubchannelblockview method)": [[3, "brevitas.core.function_wrapper.shape.DynamicOverSubChannelBlockView.forward"]], "forward() (brevitas.core.function_wrapper.shape.overbatchoveroutputchannelview method)": [[3, "brevitas.core.function_wrapper.shape.OverBatchOverOutputChannelView.forward"]], "forward() (brevitas.core.function_wrapper.shape.overbatchovertensorview method)": [[3, "brevitas.core.function_wrapper.shape.OverBatchOverTensorView.forward"]], "forward() (brevitas.core.function_wrapper.shape.overoutputchannelview method)": [[3, "brevitas.core.function_wrapper.shape.OverOutputChannelView.forward"]], "forward() (brevitas.core.function_wrapper.shape.overoutputfeaturesview method)": [[3, "brevitas.core.function_wrapper.shape.OverOutputFeaturesView.forward"]], "forward() (brevitas.core.function_wrapper.shape.oversubchannelblockview method)": [[3, "brevitas.core.function_wrapper.shape.OverSubChannelBlockView.forward"]], "forward() (brevitas.core.function_wrapper.shape.overtensorview method)": [[3, "brevitas.core.function_wrapper.shape.OverTensorView.forward"]], "forward() (brevitas.core.function_wrapper.shape.permutedims method)": [[3, "brevitas.core.function_wrapper.shape.PermuteDims.forward"]], "inf_nan_clamp() (brevitas.core.function_wrapper.clamp.floatclamp method)": [[3, "brevitas.core.function_wrapper.clamp.FloatClamp.inf_nan_clamp"]], "saturating_clamp() (brevitas.core.function_wrapper.clamp.floatclamp method)": [[3, "brevitas.core.function_wrapper.clamp.FloatClamp.saturating_clamp"]], "binaryquant (class in brevitas.core.quant.binary)": [[4, "brevitas.core.quant.binary.BinaryQuant"]], "clampedbinaryquant (class in brevitas.core.quant.binary)": [[4, "brevitas.core.quant.binary.ClampedBinaryQuant"]], "decoupledintquant (class in brevitas.core.quant.int_base)": [[4, "brevitas.core.quant.int_base.DecoupledIntQuant"]], "decoupledrescalingintquant (class in brevitas.core.quant.int)": [[4, "brevitas.core.quant.int.DecoupledRescalingIntQuant"]], "decoupledrescalingintquantwithinput (class in brevitas.core.quant.int)": [[4, "brevitas.core.quant.int.DecoupledRescalingIntQuantWithInput"]], "delaywrapper (class in brevitas.core.quant.delay)": [[4, "brevitas.core.quant.delay.DelayWrapper"]], "intquant (class in brevitas.core.quant.int_base)": [[4, "brevitas.core.quant.int_base.IntQuant"]], "prescaledrestrictintquant (class in brevitas.core.quant.int)": [[4, "brevitas.core.quant.int.PrescaledRestrictIntQuant"]], "prescaledrestrictintquantwithinputbitwidth (class in brevitas.core.quant.int)": [[4, "brevitas.core.quant.int.PrescaledRestrictIntQuantWithInputBitWidth"]], "rescalingintquant (class in brevitas.core.quant.int)": [[4, "brevitas.core.quant.int.RescalingIntQuant"]], "ternaryquant (class in brevitas.core.quant.ternary)": [[4, "brevitas.core.quant.ternary.TernaryQuant"]], "truncintquant (class in brevitas.core.quant.int)": [[4, "brevitas.core.quant.int.TruncIntQuant"]], "brevitas.core.quant": [[4, "module-brevitas.core.quant"]], "brevitas.core.quant.binary": [[4, "module-brevitas.core.quant.binary"]], "brevitas.core.quant.delay": [[4, "module-brevitas.core.quant.delay"]], "brevitas.core.quant.int": [[4, "module-brevitas.core.quant.int"]], "brevitas.core.quant.int_base": [[4, "module-brevitas.core.quant.int_base"]], "brevitas.core.quant.ternary": [[4, "module-brevitas.core.quant.ternary"]], "forward() (brevitas.core.quant.binary.binaryquant method)": [[4, "brevitas.core.quant.binary.BinaryQuant.forward"]], "forward() (brevitas.core.quant.binary.clampedbinaryquant method)": [[4, "brevitas.core.quant.binary.ClampedBinaryQuant.forward"]], "forward() (brevitas.core.quant.delay.delaywrapper method)": [[4, "brevitas.core.quant.delay.DelayWrapper.forward"]], "forward() (brevitas.core.quant.int.decoupledrescalingintquant method)": [[4, "brevitas.core.quant.int.DecoupledRescalingIntQuant.forward"]], "forward() (brevitas.core.quant.int.decoupledrescalingintquantwithinput method)": [[4, "brevitas.core.quant.int.DecoupledRescalingIntQuantWithInput.forward"]], "forward() (brevitas.core.quant.int.prescaledrestrictintquant method)": [[4, "brevitas.core.quant.int.PrescaledRestrictIntQuant.forward"]], "forward() (brevitas.core.quant.int.prescaledrestrictintquantwithinputbitwidth method)": [[4, "brevitas.core.quant.int.PrescaledRestrictIntQuantWithInputBitWidth.forward"]], "forward() (brevitas.core.quant.int.rescalingintquant method)": [[4, "brevitas.core.quant.int.RescalingIntQuant.forward"]], "forward() (brevitas.core.quant.int.truncintquant method)": [[4, "brevitas.core.quant.int.TruncIntQuant.forward"]], "forward() (brevitas.core.quant.int_base.decoupledintquant method)": [[4, "brevitas.core.quant.int_base.DecoupledIntQuant.forward"]], "forward() (brevitas.core.quant.int_base.intquant method)": [[4, "brevitas.core.quant.int_base.IntQuant.forward"]], "forward() (brevitas.core.quant.ternary.ternaryquant method)": [[4, "brevitas.core.quant.ternary.TernaryQuant.forward"]], "max_int() (brevitas.core.quant.int.truncintquant method)": [[4, "brevitas.core.quant.int.TruncIntQuant.max_int"]], "max_int() (brevitas.core.quant.int_base.decoupledintquant method)": [[4, "brevitas.core.quant.int_base.DecoupledIntQuant.max_int"]], "max_int() (brevitas.core.quant.int_base.intquant method)": [[4, "brevitas.core.quant.int_base.IntQuant.max_int"]], "min_int() (brevitas.core.quant.int.truncintquant method)": [[4, "brevitas.core.quant.int.TruncIntQuant.min_int"]], "min_int() (brevitas.core.quant.int_base.decoupledintquant method)": [[4, "brevitas.core.quant.int_base.DecoupledIntQuant.min_int"]], "min_int() (brevitas.core.quant.int_base.intquant method)": [[4, "brevitas.core.quant.int_base.IntQuant.min_int"]], "to_int() (brevitas.core.quant.int_base.decoupledintquant method)": [[4, "brevitas.core.quant.int_base.DecoupledIntQuant.to_int"]], "to_int() (brevitas.core.quant.int_base.intquant method)": [[4, "brevitas.core.quant.int_base.IntQuant.to_int"]], "constscaling (class in brevitas.core.scaling.standalone)": [[5, "brevitas.core.scaling.standalone.ConstScaling"]], "intscaling (class in brevitas.core.scaling.int_scaling)": [[5, "brevitas.core.scaling.int_scaling.IntScaling"]], "parameterfromruntimestatsscaling (class in brevitas.core.scaling.standalone)": [[5, "brevitas.core.scaling.standalone.ParameterFromRuntimeStatsScaling"]], "parameterfromstatsfromparameterscaling (class in brevitas.core.scaling.standalone)": [[5, "brevitas.core.scaling.standalone.ParameterFromStatsFromParameterScaling"]], "parameterscaling (class in brevitas.core.scaling.standalone)": [[5, "brevitas.core.scaling.standalone.ParameterScaling"]], "poweroftwointscaling (class in brevitas.core.scaling.int_scaling)": [[5, "brevitas.core.scaling.int_scaling.PowerOfTwoIntScaling"]], "runtimedynamicgroupstatsscaling (class in brevitas.core.scaling.runtime)": [[5, "brevitas.core.scaling.runtime.RuntimeDynamicGroupStatsScaling"]], "runtimestatsscaling (class in brevitas.core.scaling.runtime)": [[5, "brevitas.core.scaling.runtime.RuntimeStatsScaling"]], "statsfromparameterscaling (class in brevitas.core.scaling.runtime)": [[5, "brevitas.core.scaling.runtime.StatsFromParameterScaling"]], "truncmsbscaling (class in brevitas.core.scaling.standalone)": [[5, "brevitas.core.scaling.standalone.TruncMsbScaling"]], "truncscalingwrapper (class in brevitas.core.scaling.standalone)": [[5, "brevitas.core.scaling.standalone.TruncScalingWrapper"]], "brevitas.core.scaling": [[5, "module-brevitas.core.scaling"]], "brevitas.core.scaling.int_scaling": [[5, "module-brevitas.core.scaling.int_scaling"]], "brevitas.core.scaling.runtime": [[5, "module-brevitas.core.scaling.runtime"]], "brevitas.core.scaling.standalone": [[5, "module-brevitas.core.scaling.standalone"]], "forward() (brevitas.core.scaling.int_scaling.intscaling method)": [[5, "brevitas.core.scaling.int_scaling.IntScaling.forward"]], "forward() (brevitas.core.scaling.int_scaling.poweroftwointscaling method)": [[5, "brevitas.core.scaling.int_scaling.PowerOfTwoIntScaling.forward"]], "forward() (brevitas.core.scaling.runtime.runtimedynamicgroupstatsscaling method)": [[5, "brevitas.core.scaling.runtime.RuntimeDynamicGroupStatsScaling.forward"]], "forward() (brevitas.core.scaling.runtime.runtimestatsscaling method)": [[5, "brevitas.core.scaling.runtime.RuntimeStatsScaling.forward"]], "forward() (brevitas.core.scaling.runtime.statsfromparameterscaling method)": [[5, "brevitas.core.scaling.runtime.StatsFromParameterScaling.forward"]], "forward() (brevitas.core.scaling.standalone.constscaling method)": [[5, "brevitas.core.scaling.standalone.ConstScaling.forward"]], "forward() (brevitas.core.scaling.standalone.parameterfromruntimestatsscaling method)": [[5, "brevitas.core.scaling.standalone.ParameterFromRuntimeStatsScaling.forward"]], "forward() (brevitas.core.scaling.standalone.parameterfromstatsfromparameterscaling method)": [[5, "brevitas.core.scaling.standalone.ParameterFromStatsFromParameterScaling.forward"]], "forward() (brevitas.core.scaling.standalone.parameterscaling method)": [[5, "brevitas.core.scaling.standalone.ParameterScaling.forward"]], "forward() (brevitas.core.scaling.standalone.truncmsbscaling method)": [[5, "brevitas.core.scaling.standalone.TruncMsbScaling.forward"]], "forward() (brevitas.core.scaling.standalone.truncscalingwrapper method)": [[5, "brevitas.core.scaling.standalone.TruncScalingWrapper.forward"]], "init_scale() (brevitas.core.scaling.standalone.parameterfromruntimestatsscaling method)": [[5, "brevitas.core.scaling.standalone.ParameterFromRuntimeStatsScaling.init_scale"]], "state_dict() (brevitas.core.scaling.standalone.parameterfromruntimestatsscaling method)": [[5, "brevitas.core.scaling.standalone.ParameterFromRuntimeStatsScaling.state_dict"]], "state_dict() (brevitas.core.scaling.standalone.parameterfromstatsfromparameterscaling method)": [[5, "brevitas.core.scaling.standalone.ParameterFromStatsFromParameterScaling.state_dict"]], "training_forward() (brevitas.core.scaling.standalone.parameterfromruntimestatsscaling method)": [[5, "brevitas.core.scaling.standalone.ParameterFromRuntimeStatsScaling.training_forward"]], "absave (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.AbsAve"]], "absmax (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.AbsMax"]], "absmaxave (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.AbsMaxAve"]], "absmaxl2 (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.AbsMaxL2"]], "absminmax (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.AbsMinMax"]], "abspercentile (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.AbsPercentile"]], "halfquadraticoptimizerscale (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.HalfQuadraticOptimizerScale"]], "halfquadraticoptimizerzeropoint (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.HalfQuadraticOptimizerZeroPoint"]], "klminimizerthreshold (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.KLMinimizerThreshold"]], "l1norm (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.L1Norm"]], "l2norm (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.L2Norm"]], "mse (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.MSE"]], "meanlearnedsigmastd (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.MeanLearnedSigmaStd"]], "meansigmastd (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.MeanSigmaStd"]], "negativeminorzero (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.NegativeMinOrZero"]], "negativepercentileorzero (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.NegativePercentileOrZero"]], "percentileinterval (class in brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.PercentileInterval"]], "brevitas.core.stats": [[6, "module-brevitas.core.stats"]], "brevitas.core.stats.stats_op": [[6, "module-brevitas.core.stats.stats_op"]], "brevitas.core.stats.stats_wrapper": [[6, "module-brevitas.core.stats.stats_wrapper"]], "brevitas.core.stats.view_wrapper": [[6, "module-brevitas.core.stats.view_wrapper"]], "evaluate_loss() (brevitas.core.stats.stats_op.mse method)": [[6, "brevitas.core.stats.stats_op.MSE.evaluate_loss"]], "forward() (brevitas.core.stats.stats_op.absave method)": [[6, "brevitas.core.stats.stats_op.AbsAve.forward"]], "forward() (brevitas.core.stats.stats_op.absmax method)": [[6, "brevitas.core.stats.stats_op.AbsMax.forward"]], "forward() (brevitas.core.stats.stats_op.absmaxave method)": [[6, "brevitas.core.stats.stats_op.AbsMaxAve.forward"]], "forward() (brevitas.core.stats.stats_op.absmaxl2 method)": [[6, "brevitas.core.stats.stats_op.AbsMaxL2.forward"]], "forward() (brevitas.core.stats.stats_op.absminmax method)": [[6, "brevitas.core.stats.stats_op.AbsMinMax.forward"]], "forward() (brevitas.core.stats.stats_op.abspercentile method)": [[6, "brevitas.core.stats.stats_op.AbsPercentile.forward"]], "forward() (brevitas.core.stats.stats_op.halfquadraticoptimizerscale method)": [[6, "brevitas.core.stats.stats_op.HalfQuadraticOptimizerScale.forward"]], "forward() (brevitas.core.stats.stats_op.halfquadraticoptimizerzeropoint method)": [[6, "brevitas.core.stats.stats_op.HalfQuadraticOptimizerZeroPoint.forward"]], "forward() (brevitas.core.stats.stats_op.klminimizerthreshold method)": [[6, "brevitas.core.stats.stats_op.KLMinimizerThreshold.forward"]], "forward() (brevitas.core.stats.stats_op.l1norm method)": [[6, "brevitas.core.stats.stats_op.L1Norm.forward"]], "forward() (brevitas.core.stats.stats_op.l2norm method)": [[6, "brevitas.core.stats.stats_op.L2Norm.forward"]], "forward() (brevitas.core.stats.stats_op.mse method)": [[6, "brevitas.core.stats.stats_op.MSE.forward"]], "forward() (brevitas.core.stats.stats_op.meanlearnedsigmastd method)": [[6, "brevitas.core.stats.stats_op.MeanLearnedSigmaStd.forward"]], "forward() (brevitas.core.stats.stats_op.meansigmastd method)": [[6, "brevitas.core.stats.stats_op.MeanSigmaStd.forward"]], "forward() (brevitas.core.stats.stats_op.negativeminorzero method)": [[6, "brevitas.core.stats.stats_op.NegativeMinOrZero.forward"]], "forward() (brevitas.core.stats.stats_op.negativepercentileorzero method)": [[6, "brevitas.core.stats.stats_op.NegativePercentileOrZero.forward"]], "forward() (brevitas.core.stats.stats_op.percentileinterval method)": [[6, "brevitas.core.stats.stats_op.PercentileInterval.forward"]], "masked_median() (in module brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.masked_median"]], "mse_fib_search() (brevitas.core.stats.stats_op.mse method)": [[6, "brevitas.core.stats.stats_op.MSE.mse_fib_search"]], "mse_grid_search() (brevitas.core.stats.stats_op.mse method)": [[6, "brevitas.core.stats.stats_op.MSE.mse_grid_search"]], "mse_loss_fn() (brevitas.core.stats.stats_op.mse method)": [[6, "brevitas.core.stats.stats_op.MSE.mse_loss_fn"]], "mse_search() (brevitas.core.stats.stats_op.mse method)": [[6, "brevitas.core.stats.stats_op.MSE.mse_search"]], "optimize() (brevitas.core.stats.stats_op.halfquadraticoptimizerscale method)": [[6, "brevitas.core.stats.stats_op.HalfQuadraticOptimizerScale.optimize"]], "optimize() (brevitas.core.stats.stats_op.halfquadraticoptimizerzeropoint method)": [[6, "brevitas.core.stats.stats_op.HalfQuadraticOptimizerZeroPoint.optimize"]], "parameter_search() (brevitas.core.stats.stats_op.halfquadraticoptimizerscale method)": [[6, "brevitas.core.stats.stats_op.HalfQuadraticOptimizerScale.parameter_search"]], "parameter_search() (brevitas.core.stats.stats_op.halfquadraticoptimizerzeropoint method)": [[6, "brevitas.core.stats.stats_op.HalfQuadraticOptimizerZeroPoint.parameter_search"]], "shrink_lp_op() (in module brevitas.core.stats.stats_op)": [[6, "brevitas.core.stats.stats_op.shrink_lp_op"]], "smooth_normalize_distribution() (brevitas.core.stats.stats_op.klminimizerthreshold method)": [[6, "brevitas.core.stats.stats_op.KLMinimizerThreshold.smooth_normalize_distribution"]], "abs_binary_sign_grad() (in module brevitas.function.ops_ste)": [[7, "brevitas.function.ops_ste.abs_binary_sign_grad"]], "binary_sign() (in module brevitas.function.ops)": [[7, "brevitas.function.ops.binary_sign"]], "binary_sign_ste() (in module brevitas.function.ops_ste)": [[7, "brevitas.function.ops_ste.binary_sign_ste"]], "brevitas.function.ops": [[7, "module-brevitas.function.ops"]], "brevitas.function.ops_ste": [[7, "module-brevitas.function.ops_ste"]], "brevitas.function.shape": [[7, "module-brevitas.function.shape"]], "ceil_ste() (in module brevitas.function.ops_ste)": [[7, "brevitas.function.ops_ste.ceil_ste"]], "compute_max_mantissa() (in module brevitas.function.ops)": [[7, "brevitas.function.ops.compute_max_mantissa"]], "dpu_round() (in module brevitas.function.ops)": [[7, "brevitas.function.ops.dpu_round"]], "dpu_round_ste() (in module brevitas.function.ops_ste)": [[7, "brevitas.function.ops_ste.dpu_round_ste"]], "floor_ste() (in module brevitas.function.ops_ste)": [[7, "brevitas.function.ops_ste.floor_ste"]], "get_upper_bound_on_l1_norm() (in module brevitas.function.ops)": [[7, "brevitas.function.ops.get_upper_bound_on_l1_norm"]], "identity() (in module brevitas.function.ops)": [[7, "brevitas.function.ops.identity"]], "max_float() (in module brevitas.function.ops)": [[7, "brevitas.function.ops.max_float"]], "max_int() (in module brevitas.function.ops)": [[7, "brevitas.function.ops.max_int"]], "min_int() (in module brevitas.function.ops)": [[7, "brevitas.function.ops.min_int"]], "over_batch_over_output_channels() (in module brevitas.function.shape)": [[7, "brevitas.function.shape.over_batch_over_output_channels"]], "over_batch_over_tensor() (in module brevitas.function.shape)": [[7, "brevitas.function.shape.over_batch_over_tensor"]], "over_output_channels() (in module brevitas.function.shape)": [[7, "brevitas.function.shape.over_output_channels"]], "over_output_features() (in module brevitas.function.shape)": [[7, "brevitas.function.shape.over_output_features"]], "over_tensor() (in module brevitas.function.shape)": [[7, "brevitas.function.shape.over_tensor"]], "round_ste() (in module brevitas.function.ops_ste)": [[7, "brevitas.function.ops_ste.round_ste"]], "round_to_zero() (in module brevitas.function.ops)": [[7, "brevitas.function.ops.round_to_zero"]], "round_to_zero_ste() (in module brevitas.function.ops_ste)": [[7, "brevitas.function.ops_ste.round_to_zero_ste"]], "scalar_clamp_min_ste() (in module brevitas.function.ops_ste)": [[7, "brevitas.function.ops_ste.scalar_clamp_min_ste"]], "scalar_clamp_ste() (in module brevitas.function.ops_ste)": [[7, "brevitas.function.ops_ste.scalar_clamp_ste"]], "tensor_clamp() (in module brevitas.function.ops)": [[7, "brevitas.function.ops.tensor_clamp"]], "tensor_clamp_() (in module brevitas.function.ops)": [[7, "brevitas.function.ops.tensor_clamp_"]], "tensor_clamp_ste() (in module brevitas.function.ops_ste)": [[7, "brevitas.function.ops_ste.tensor_clamp_ste"]], "tensor_clamp_ste_() (in module brevitas.function.ops_ste)": [[7, "brevitas.function.ops_ste.tensor_clamp_ste_"]], "ternary_sign_ste() (in module brevitas.function.ops_ste)": [[7, "brevitas.function.ops_ste.ternary_sign_ste"]], "absbinarysigngradfn (class in brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.AbsBinarySignGradFn"]], "binarysignstefn (class in brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.BinarySignSteFn"]], "ceilstefn (class in brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.CeilSteFn"]], "dpuroundstefn (class in brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.DPURoundSteFn"]], "floorstefn (class in brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.FloorSteFn"]], "inplacetensorclampstefn (class in brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.InplaceTensorClampSteFn"]], "roundstefn (class in brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.RoundSteFn"]], "roundtozerostefn (class in brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.RoundToZeroSteFn"]], "scalarclampminstefn (class in brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.ScalarClampMinSteFn"]], "scalarclampstefn (class in brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.ScalarClampSteFn"]], "tensorclampstefn (class in brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.TensorClampSteFn"]], "ternarysignstefn (class in brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.TernarySignSteFn"]], "abs_binary_sign_grad_impl() (in module brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.abs_binary_sign_grad_impl"]], "binary_sign_ste_impl() (in module brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.binary_sign_ste_impl"]], "brevitas.ops.autograd_ste_ops": [[8, "module-brevitas.ops.autograd_ste_ops"]], "ceil_ste_impl() (in module brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.ceil_ste_impl"]], "dpu_round_ste_impl() (in module brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.dpu_round_ste_impl"]], "floor_ste_impl() (in module brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.floor_ste_impl"]], "round_ste_impl() (in module brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.round_ste_impl"]], "round_to_zero_ste_impl() (in module brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.round_to_zero_ste_impl"]], "scalar_clamp_min_ste_impl() (in module brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.scalar_clamp_min_ste_impl"]], "scalar_clamp_ste_impl() (in module brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.scalar_clamp_ste_impl"]], "tensor_clamp_ste_impl() (in module brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.tensor_clamp_ste_impl"]], "ternary_sign_ste_impl() (in module brevitas.ops.autograd_ste_ops)": [[8, "brevitas.ops.autograd_ste_ops.ternary_sign_ste_impl"]]}})